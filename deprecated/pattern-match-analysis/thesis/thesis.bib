@ARTICLE{Milner78atheory,
    author = {Robin Milner},
    title = {A theory of type polymorphism in programming},
    journal = {Journal of Computer and System Sciences},
    year = {1978},
    volume = {17},
    pages = {348--375}
}

@misc{Haskell98,
    author = {{Peyton Jones}, Simon and Hughes, John and Augustsson, Lennart and Barton, Dave and Boutel, Brian and Burton, Warren and Fasel, Joseph and Hammond, Kevin and Hinze, Ralf and Hudak, Paul and Johnsson, Thomas and Jones, Mark and Launchbury, John and Meijer, Erik and Peterson, John and Reid, Alastair and Runciman, Colin and Wadler, Philip},
    citeulike-article-id = {4034405},
    comment = {Available from \url{http://www.haskell.org/onlinereport/}},
    keywords = {file-import-09-02-11, postdoc\_bib},
    posted-at = {2009-02-11 10:55:50},
    priority = {2},
    title = {{The Haskell 98 Report}},
    year = {1999}
}

@book{Nielson:1999:PPA:555142,
 author = {Nielson, Flemming and Nielson, Hanne R. and Hankin, Chris},
 title = {Principles of Program Analysis},
 year = {1999},
 isbn = {3540654100},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
}

@inproceedings{Freeman:1991:RTM:113445.113468,
 author = {Freeman, Tim and Pfenning, Frank},
 title = {Refinement types for {ML}},
 booktitle = {Proceedings of the ACM SIGPLAN 1991 conference on Programming language design and implementation},
 series = {PLDI '91},
 year = {1991},
 isbn = {0-89791-428-7},
 location = {Toronto, Ontario, Canada},
 pages = {268--277},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/113445.113468},
 doi = {http://doi.acm.org/10.1145/113445.113468},
 acmid = {113468},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@MISC{Freeman94refinementtypes,
    author = {Tim Freeman},
    title = {Refinement types for {ML}},
    year = {1994}
}

@book{DBLP:books/others/tree1984,
  author    = {Ferenc G{\'e}cseg and
               Magnus Steinby},
  title     = {Tree Automata},
  publisher = {Akad{\'e}niai Kiad{\'o}, Budapest, Hungary},
  year      = {1984},
  isbn      = {963-05-3170-4},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@MISC{Mitchell,
    author = {Neil Mitchell},
    title = {Transformation and Analysis of Functional Programs},
    year = {}
}

@inproceedings{DBLP:conf/sfp/MitchellR05,
  author    = {Neil Mitchell and
               Colin Runciman},
  title     = {A static checker for safe pattern matching in Haskell},
  booktitle = {Trends in Functional Programming},
  year      = {2005},
  pages     = {15-30},
  crossref  = {DBLP:conf/sfp/2005},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/sfp/2005,
  editor    = {Marko C. J. D. van Eekelen},
  title     = {Revised Selected Papers from the Sixth Symposium on Trends
               in Functional Programming, TFP 2005, Tallinn, Estonia, 23-24
               September 2005},
  booktitle = {Trends in Functional Programming},
  publisher = {Intellect},
  series    = {Trends in Functional Programming},
  volume    = {6},
  year      = {2007},
  isbn      = {978-1-84150-176-5},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@INPROCEEDINGS{Xu09staticcontract,
    author = {Dana N. Xu and Simon Peyton Jones and Koen Claessen},
    title = {Static Contract Checking for Haskell},
    booktitle = {In Proceedings of the 36 th Annual ACM Symposium on the Principles of Programming Languages},
    year = {2009},
    pages = {41--52},
    publisher = {ACM}
}

@inproceedings{Xu:2006:ESC:1159842.1159849,
 author = {Xu, Dana N.},
 title = {Extended static checking for haskell},
 booktitle = {Proceedings of the 2006 ACM SIGPLAN workshop on Haskell},
 series = {Haskell '06},
 year = {2006},
 isbn = {1-59593-489-8},
 location = {Portland, Oregon, USA},
 pages = {48--59},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1159842.1159849},
 doi = {http://doi.acm.org/10.1145/1159842.1159849},
 acmid = {1159849},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {counterexample guided unrolling, pre/postcondition, symbolic simplification},
} 

@inproceedings{Findler:2002:CHF:581478.581484,
 author = {Findler, Robert Bruce and Felleisen, Matthias},
 title = {Contracts for higher-order functions},
 booktitle = {Proceedings of the seventh ACM SIGPLAN international conference on Functional programming},
 series = {ICFP '02},
 year = {2002},
 isbn = {1-58113-487-8},
 location = {Pittsburgh, PA, USA},
 pages = {48--59},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/581478.581484},
 doi = {http://doi.acm.org/10.1145/581478.581484},
 acmid = {581484},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {behavioral specifications, contracts, higher-order functions, predicate typing, solfware reliability},
}

@INPROCEEDINGS{Xi98dependenttypes,
    author = {Hongwei Xi and Dana Scott},
    title = {Dependent Types in Practical Programming},
    booktitle = {In Proceedings of ACM SIGPLAN Symposium on Principles of Programming Languages},
    year = {1998},
    pages = {214--227},
    publisher = {ACM Press}
}

@article{DML-JFP07,
author = "Hongwei Xi",
title = {{Dependent ML: an approach to practical programming with dependent types}},
journal = "Journal of Functional Programming",
year = 2007,
volume = "17",
number = "2",
pages = "215-286",
abstract = {{
We present an approach to enriching the type system of ML with a restricted
form of dependent types, where type index terms are required to be
drawn from a given type index language L that is completely separate
from run-time programs, leading to the DML(L) language schema.  This
enrichment allows for specification and inference of significantly more
precise type information, facilitating program error detection and compiler
optimization.  The primary contribution of the paper lies in our language
design, which can effectively support the use of dependent types in
practical programming. In particular, this design makes it both natural and
straightforward to accommodate dependent types in the presence of effects
such as references and exceptions.
}}
}

@article{DBLP:journals/jfp/Maranget07,
  author    = {Luc Maranget},
  title     = {Warnings for pattern matching},
  journal   = {J. Funct. Program.},
  volume    = {17},
  number    = {3},
  year      = {2007},
  pages     = {387-421},
  ee        = {http://dx.doi.org/10.1017/S0956796807006223},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{Odersky:1999:TIC:308181.308203,
 author = {Odersky, Martin and Sulzmann, Martin and Wehr, Martin},
 title = {Type inference with constrained types},
 journal = {Theor. Pract. Object Syst.},
 issue_date = {Jan. 1999},
 volume = {5},
 number = {1},
 month = jan,
 year = {1999},
 issn = {1074-3227},
 pages = {35--55},
 numpages = {21},
 url = {http://dx.doi.org/10.1002/(SICI)1096-9942(199901/03)5:1<35::AID-TAPO4>3.0.CO;2-4},
 doi = {10.1002/(SICI)1096-9942(199901/03)5:1<35::AID-TAPO4>3.0.CO;2-4},
 acmid = {308203},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
} 

@article{DBLP:journals/entcs/HageH09,
  author    = {Jurriaan Hage and
               Bastiaan Heeren},
  title     = {Strategies for Solving Constraints in Type and Effect Systems},
  journal   = {Electr. Notes Theor. Comput. Sci.},
  volume    = {236},
  year      = {2009},
  pages     = {163-183},
  ee        = {http://dx.doi.org/10.1016/j.entcs.2009.03.021},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@TECHREPORT{Pierce91programmingwith,
    author = {Benjamin C. Pierce},
    title = {Programming with Intersection Types and Bounded Polymorphism},
    institution = {},
    year = {1991}
}

@TECHREPORT{Reynolds96designof,
    author = {John C. Reynolds},
    title = {Design of the Programming Language Forsythe},
    institution = {},
    year = {1996}
}

@phdthesis{Shivers:1991:CAH:124950,
 author = {Shivers, Olin Grigsby},
 title = {Control-Flow Analysis of Higher-Order Languages},
 year = {1991},
 note = {UMI Order No. GAX91-26964},
 publisher = {Carnegie Mellon University},
 address = {Pittsburgh, PA, USA},
} 

@INPROCEEDINGS{aiken,
    author = {A. Aiken},
    title = {Introduction to Set Constraint-Based Program Analysis},
    booktitle = {Science of Computer Programming},
    year = {1999},
    pages = {79--111},
}

@INPROCEEDINGS{Heintze94setconstraints,
    author = {Nevin Heintze and Joxan Jaffar},
    title = {Set Constraints and Set-Based Analysis},
    booktitle = {In Proceedings of the Workshop on Principles and Practice of Constraint Programming, LNCS 874},
    year = {1994},
    pages = {281--298},
    publisher = {Springer-Verlag}
}

@inbook{Pierce:2002:TPL:509043,
 author = {Pierce, Benjamin C.},
 title = {Types and programming languages},
 year = {2002},
 isbn = {0-262-16209-1},
 publisher = {MIT Press},
 address = {Cambridge, MA,  USA},
 chapter = {22.3: Constraint-Based Typing}
} 

