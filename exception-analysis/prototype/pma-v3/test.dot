digraph C {
 "?100 = {+}/{}" [fontcolor=black];
 "?101 = {NE}/{}" [fontcolor=black];
 "?102 = {E,NE}/{CRASH_d}" [fontcolor=black];
 "?103 = {+}/{}" [fontcolor=black];
 "?104 = {NE}/{}" [fontcolor=black];
 "?105 = {}/{CRASH_d}" [fontcolor=black];
 "?106 = {}/{}" [fontcolor=black];
 "?107 = {}/{}" [fontcolor=black];
 "?108 = {}/{}" [fontcolor=black];
 "?109 = {+}/{}" [fontcolor=black];
 "?110 = {E,NE}/{}" [fontcolor=black];
 "?111 = {}/{}" [fontcolor=black];
 "?112 = {}/{}" [fontcolor=black];
 "?113 = {E}/{}" [fontcolor=black];
 "?114 = {E,NE}/{}" [fontcolor=black];
 "?115 = {}/--" [fontcolor=black];
 "?116 = {E}/{}" [fontcolor=black];
 "?117 = {+}/--" [fontcolor=black];
 "?118 = {NE}/{}" [fontcolor=black];
 "?119 = {}/--" [fontcolor=black];
 "?120 = {}/--" [fontcolor=black];
 "?121 = {E}/{}" [fontcolor=black];
 "?122 = {+}/{}" [fontcolor=black];
 "?123 = {NE}/{}" [fontcolor=black];
 "?124 = {NE}/{}" [fontcolor=black];
 "?125 = {E,NE}/{}" [fontcolor=black];
 "?126 = {False,True}/{}" [fontcolor=black];
 "?127 = {+}/{}" [fontcolor=black];
 "?128 = {NE}/{}" [fontcolor=black];
 "?129 = {NE}/{CRASH_d}" [fontcolor=black];
 "?130 = {+}/{}" [fontcolor=black];
 "?131 = {NE}/{}" [fontcolor=black];
 "?132 = {E,NE}/{CRASH_d}" [fontcolor=black];
 "?133 = {}/{}" [fontcolor=black];
 "?134 = {+}/{}" [fontcolor=black];
 "?135 = {+}/{}" [fontcolor=black];
 "?136 = {E,NE}/{}" [fontcolor=black];
 "?137 = {+}/{}" [fontcolor=black];
 "?138 = {NE}/{}" [fontcolor=black];
 "?139 = {}/{}" [fontcolor=black];
 "?140 = {}/{}" [fontcolor=black];
 "?141 = {}/{}" [fontcolor=black];
 "?142 = {False}/{}" [fontcolor=black];
 "?143 = {}/{}" [fontcolor=black];
 "?144 = {E}/{}" [fontcolor=black];
 "?145 = {+}/--" [fontcolor=black];
 "?146 = {+}/--" [fontcolor=black];
 "?147 = {+}/--" [fontcolor=black];
 "?148 = {}/--" [fontcolor=black];
 "?149 = {E}/{}" [fontcolor=black];
 "?150 = {+}/--" [fontcolor=black];
 "?151 = {NE}/{}" [fontcolor=black];
 "?152 = {+}/--" [fontcolor=black];
 "?153 = {NE}/{}" [fontcolor=black];
 "?154 = {+}/{}" [fontcolor=black];
 "?155 = {NE}/{}" [fontcolor=black];
 "?156 = {+}/{}" [fontcolor=blue];
 "?157 = {NE}/{}" [fontcolor=blue];
 "?158 = {E,NE}/{CRASH_d}" [fontcolor=blue];
 "?44 = {+}/{}" [fontcolor=black];
 "?45 = {NE}/{}" [fontcolor=black];
 "?46 = {E,NE}/{CRASH_d}" [fontcolor=black];
 "?47 = {+}/{}" [fontcolor=black];
 "?48 = {NE}/{CRASH_d}" [fontcolor=black];
 "?49 = {}/{CRASH_d}" [fontcolor=black];
 "?50 = {False,True}/{}" [fontcolor=black];
 "?51 = {+}/{}" [fontcolor=black];
 "?52 = {+}/--" [fontcolor=black];
 "?53 = {NE}/{CRASH_d}" [fontcolor=black];
 "?54 = {+}/{}" [fontcolor=black];
 "?55 = {NE}/{}" [fontcolor=black];
 "?56 = {NE}/{CRASH_d}" [fontcolor=black];
 "?57 = {}/--" [fontcolor=black];
 "?58 = {E}/{}" [fontcolor=black];
 "?59 = {+}/--" [fontcolor=black];
 "?60 = {NE}/{}" [fontcolor=black];
 "?61 = {+}/--" [fontcolor=black];
 "?62 = {NE}/--" [fontcolor=black];
 "?63 = {NE}/{CRASH_d}" [fontcolor=black];
 "?64 = {+}/{}" [fontcolor=black];
 "?65 = {NE}/{}" [fontcolor=black];
 "?66 = {NE}/{CRASH_d}" [fontcolor=black];
 "?67 = {+}/{}" [fontcolor=black];
 "?68 = {NE}/{}" [fontcolor=black];
 "?69 = {NE}/{CRASH_d}" [fontcolor=black];
 "?70 = --/{}" [fontcolor=black];
 "?71 = --/{}" [fontcolor=black];
 "?72 = --/{}" [fontcolor=black];
 "?73 = {+}/{}" [fontcolor=black];
 "?74 = {NE}/{}" [fontcolor=black];
 "?75 = {E,NE}/{CRASH_d}" [fontcolor=black];
 "?76 = {}/{}" [fontcolor=black];
 "?77 = {}/{}" [fontcolor=black];
 "?78 = {}/{}" [fontcolor=black];
 "?79 = {}/{}" [fontcolor=black];
 "?80 = {}/{}" [fontcolor=black];
 "?81 = {}/{CRASH_d}" [fontcolor=black];
 "?82 = {E,NE}/{CRASH_d}" [fontcolor=black];
 "?83 = {}/{}" [fontcolor=black];
 "?84 = {+}/{}" [fontcolor=black];
 "?85 = {NE}/{}" [fontcolor=black];
 "?86 = {E,NE}/{CRASH_d}" [fontcolor=black];
 "?87 = {+}/{}" [fontcolor=black];
 "?88 = {NE}/{}" [fontcolor=black];
 "?89 = {}/{CRASH_d}" [fontcolor=black];
 "?90 = --/{}" [fontcolor=black];
 "?91 = {+}/{}" [fontcolor=black];
 "?92 = {NE}/{}" [fontcolor=black];
 "?93 = {+}/{}" [fontcolor=black];
 "?94 = {NE}/{}" [fontcolor=black];
 "?95 = {E,NE}/{CRASH_d}" [fontcolor=black];
 "?96 = {}/{}" [fontcolor=black];
 "?97 = {+}/{}" [fontcolor=black];
 "?98 = {+}/{}" [fontcolor=black];
 "?99 = {E,NE}/{}" [fontcolor=black];
 "?100 = {+}/{}" -> "?44 = {+}/{}";
 "?101 = {NE}/{}" -> "?45 = {NE}/{}";
 "?102 = {E,NE}/{CRASH_d}" -> "?46 = {E,NE}/{CRASH_d}";
 "?103 = {+}/{}" -> "?47 = {+}/{}";
 "?104 = {NE}/{}" -> "?48 = {NE}/{CRASH_d}";
 "?105 = {}/{CRASH_d}" -> "?49 = {}/{CRASH_d}";
 "?109 = {+}/{}" -> "?117 = {+}/--";
 "?109 = {+}/{}" -> "?51 = {+}/{}";
 "?109 = {+}/{}" -> "?97 = {+}/{}";
 "?109 = {+}/{}" -> "?98 = {+}/{}";
 "?111 = {}/{}" -> "?130 = {+}/{}";
 "?112 = {}/{}" -> "?131 = {NE}/{}";
 "?113 = {E}/{}" -> "?132 = {E,NE}/{CRASH_d}";
 "?115 = {}/--" -> "?117 = {+}/--";
 "?117 = {+}/--" -> "?122 = {+}/{}";
 "?118 = {NE}/{}" -> "?123 = {NE}/{}";
 "?119 = {}/--" -> "?122 = {+}/{}";
 "?120 = {}/--" -> "?123 = {NE}/{}";
 "?122 = {+}/{}" -> "?127 = {+}/{}";
 "?123 = {NE}/{}" -> "?128 = {NE}/{}";
 "?124 = {NE}/{}" -> "?129 = {NE}/{CRASH_d}";
 "?125 = {E,NE}/{}" -> "?99 = {E,NE}/{}";
 "?126 = {False,True}/{}" -> "?50 = {False,True}/{}";
 "?127 = {+}/{}" -> "?130 = {+}/{}";
 "?128 = {NE}/{}" -> "?131 = {NE}/{}";
 "?129 = {NE}/{CRASH_d}" -> "?132 = {E,NE}/{CRASH_d}";
 "?130 = {+}/{}" -> "?156 = {+}/{}";
 "?130 = {+}/{}" -> "?93 = {+}/{}";
 "?131 = {NE}/{}" -> "?157 = {NE}/{}";
 "?131 = {NE}/{}" -> "?94 = {NE}/{}";
 "?132 = {E,NE}/{CRASH_d}" -> "?158 = {E,NE}/{CRASH_d}";
 "?132 = {E,NE}/{CRASH_d}" -> "?95 = {E,NE}/{CRASH_d}";
 "?133 = {}/{}" -> "?96 = {}/{}";
 "?134 = {+}/{}" -> "?137 = {+}/{}";
 "?135 = {+}/{}" -> "?137 = {+}/{}";
 "?137 = {+}/{}" -> "?91 = {+}/{}";
 "?138 = {NE}/{}" -> "?92 = {NE}/{}";
 "?139 = {}/{}" -> "?106 = {}/{}";
 "?140 = {}/{}" -> "?107 = {}/{}";
 "?141 = {}/{}" -> "?108 = {}/{}";
 "?143 = {}/{}" -> "?109 = {+}/{}";
 "?144 = {E}/{}" -> "?110 = {E,NE}/{}";
 "?145 = {+}/--" -> "?154 = {+}/{}";
 "?146 = {+}/--" -> "?152 = {+}/--";
 "?147 = {+}/--" -> "?150 = {+}/--";
 "?148 = {}/--" -> "?150 = {+}/--";
 "?150 = {+}/--" -> "?152 = {+}/--";
 "?152 = {+}/--" -> "?154 = {+}/{}";
 "?154 = {+}/{}" -> "?109 = {+}/{}";
 "?155 = {NE}/{}" -> "?110 = {E,NE}/{}";
 "?44 = {+}/{}" -> "?54 = {+}/{}";
 "?44 = {+}/{}" -> "?61 = {+}/--";
 "?45 = {NE}/{}" -> "?55 = {NE}/{}";
 "?45 = {NE}/{}" -> "?62 = {NE}/--";
 "?47 = {+}/{}" -> "?52 = {+}/--";
 "?47 = {+}/{}" -> "?61 = {+}/--";
 "?48 = {NE}/{CRASH_d}" -> "?62 = {NE}/--";
 "?51 = {+}/{}" -> "?52 = {+}/--";
 "?51 = {+}/{}" -> "?59 = {+}/--";
 "?52 = {+}/--" -> "?54 = {+}/{}";
 "?53 = {NE}/{CRASH_d}" -> "?55 = {NE}/{}";
 "?54 = {+}/{}" -> "?67 = {+}/{}";
 "?55 = {NE}/{}" -> "?68 = {NE}/{}";
 "?56 = {NE}/{CRASH_d}" -> "?69 = {NE}/{CRASH_d}";
 "?57 = {}/--" -> "?59 = {+}/--";
 "?59 = {+}/--" -> "?64 = {+}/{}";
 "?60 = {NE}/{}" -> "?65 = {NE}/{}";
 "?61 = {+}/--" -> "?64 = {+}/{}";
 "?62 = {NE}/--" -> "?65 = {NE}/{}";
 "?64 = {+}/{}" -> "?67 = {+}/{}";
 "?65 = {NE}/{}" -> "?68 = {NE}/{}";
 "?66 = {NE}/{CRASH_d}" -> "?69 = {NE}/{CRASH_d}";
 "?67 = {+}/{}" -> "?127 = {+}/{}";
 "?68 = {NE}/{}" -> "?128 = {NE}/{}";
 "?69 = {NE}/{CRASH_d}" -> "?129 = {NE}/{CRASH_d}";
 "?73 = {+}/{}" -> "?84 = {+}/{}";
 "?73 = {+}/{}" -> "?87 = {+}/{}";
 "?74 = {NE}/{}" -> "?85 = {NE}/{}";
 "?74 = {NE}/{}" -> "?88 = {NE}/{}";
 "?76 = {}/{}" -> "?84 = {+}/{}";
 "?77 = {}/{}" -> "?85 = {NE}/{}";
 "?78 = {}/{}" -> "?86 = {E,NE}/{CRASH_d}";
 "?79 = {}/{}" -> "?87 = {+}/{}";
 "?80 = {}/{}" -> "?88 = {NE}/{}";
 "?81 = {}/{CRASH_d}" -> "?89 = {}/{CRASH_d}";
 "?82 = {E,NE}/{CRASH_d}" -> "?86 = {E,NE}/{CRASH_d}";
 "?83 = {}/{}" -> "?89 = {}/{CRASH_d}";
 "?84 = {+}/{}" -> "?100 = {+}/{}";
 "?85 = {NE}/{}" -> "?101 = {NE}/{}";
 "?86 = {E,NE}/{CRASH_d}" -> "?102 = {E,NE}/{CRASH_d}";
 "?87 = {+}/{}" -> "?103 = {+}/{}";
 "?88 = {NE}/{}" -> "?104 = {NE}/{}";
 "?89 = {}/{CRASH_d}" -> "?105 = {}/{CRASH_d}";
 "?91 = {+}/{}" -> "?109 = {+}/{}";
 "?92 = {NE}/{}" -> "?110 = {E,NE}/{}";
 "?93 = {+}/{}" -> "?73 = {+}/{}";
 "?94 = {NE}/{}" -> "?74 = {NE}/{}";
 "?95 = {E,NE}/{CRASH_d}" -> "?75 = {E,NE}/{CRASH_d}";
 "?97 = {+}/{}" -> "?134 = {+}/{}";
 "?98 = {+}/{}" -> "?135 = {+}/{}";
 "?99 = {E,NE}/{}" -> "?136 = {E,NE}/{}";
 "fromList [False]" -> "?142 = {False}/{}";
 "fromList [False,True]" -> "?126 = {False,True}/{}";
 "fromList [+]" -> "?145 = {+}/--";
 "fromList [+]" -> "?146 = {+}/--";
 "fromList [+]" -> "?147 = {+}/--";
 "fromList [E]" -> "?113 = {E}/{}";
 "fromList [E]" -> "?116 = {E}/{}";
 "fromList [E]" -> "?121 = {E}/{}";
 "fromList [E]" -> "?144 = {E}/{}";
 "fromList [E]" -> "?149 = {E}/{}";
 "fromList [E]" -> "?58 = {E}/{}";
 "fromList [E,NE]" -> "?114 = {E,NE}/{}";
 "fromList [E,NE]" -> "?125 = {E,NE}/{}";
 "fromList [E,NE]" -> "?82 = {E,NE}/{CRASH_d}";
 "fromList [NE]" -> "?118 = {NE}/{}";
 "fromList [NE]" -> "?124 = {NE}/{}";
 "fromList [NE]" -> "?138 = {NE}/{}";
 "fromList [NE]" -> "?151 = {NE}/{}";
 "fromList [NE]" -> "?153 = {NE}/{}";
 "fromList [NE]" -> "?155 = {NE}/{}";
 "fromList [NE]" -> "?53 = {NE}/{CRASH_d}";
 "fromList [NE]" -> "?56 = {NE}/{CRASH_d}";
 "fromList [NE]" -> "?60 = {NE}/{}";
 "fromList [NE]" -> "?63 = {NE}/{CRASH_d}";
 "fromList [NE]" -> "?66 = {NE}/{CRASH_d}";
 "?100 = {+}/{}" -> "?44 = {+}/{}" [color=red];
 "?101 = {NE}/{}" -> "?45 = {NE}/{}" [color=red];
 "?102 = {E,NE}/{CRASH_d}" -> "?46 = {E,NE}/{CRASH_d}" [color=red];
 "?103 = {+}/{}" -> "?47 = {+}/{}" [color=red];
 "?104 = {NE}/{}" -> "?48 = {NE}/{CRASH_d}" [color=red];
 "?105 = {}/{CRASH_d}" -> "?49 = {}/{CRASH_d}" [color=red];
 "?109 = {+}/{}" -> "?126 = {False,True}/{}" [color=red];
 "?109 = {+}/{}" -> "?51 = {+}/{}" [color=red];
 "?109 = {+}/{}" -> "?97 = {+}/{}" [color=red];
 "?109 = {+}/{}" -> "?98 = {+}/{}" [color=red];
 "?111 = {}/{}" -> "?130 = {+}/{}" [color=red];
 "?112 = {}/{}" -> "?131 = {NE}/{}" [color=red];
 "?113 = {E}/{}" -> "?132 = {E,NE}/{CRASH_d}" [color=red];
 "?122 = {+}/{}" -> "?127 = {+}/{}" [color=red];
 "?123 = {NE}/{}" -> "?128 = {NE}/{}" [color=red];
 "?124 = {NE}/{}" -> "?129 = {NE}/{CRASH_d}" [color=red];
 "?125 = {E,NE}/{}" -> "?99 = {E,NE}/{}" [color=red];
 "?126 = {False,True}/{}" -> "?50 = {False,True}/{}" [color=red];
 "?127 = {+}/{}" -> "?130 = {+}/{}" [color=red];
 "?128 = {NE}/{}" -> "?131 = {NE}/{}" [color=red];
 "?129 = {NE}/{CRASH_d}" -> "?132 = {E,NE}/{CRASH_d}" [color=red];
 "?130 = {+}/{}" -> "?156 = {+}/{}" [color=red];
 "?130 = {+}/{}" -> "?93 = {+}/{}" [color=red];
 "?131 = {NE}/{}" -> "?157 = {NE}/{}" [color=red];
 "?131 = {NE}/{}" -> "?94 = {NE}/{}" [color=red];
 "?132 = {E,NE}/{CRASH_d}" -> "?158 = {E,NE}/{CRASH_d}" [color=red];
 "?132 = {E,NE}/{CRASH_d}" -> "?95 = {E,NE}/{CRASH_d}" [color=red];
 "?133 = {}/{}" -> "?96 = {}/{}" [color=red];
 "?137 = {+}/{}" -> "?91 = {+}/{}" [color=red];
 "?138 = {NE}/{}" -> "?92 = {NE}/{}" [color=red];
 "?139 = {}/{}" -> "?106 = {}/{}" [color=red];
 "?140 = {}/{}" -> "?107 = {}/{}" [color=red];
 "?141 = {}/{}" -> "?108 = {}/{}" [color=red];
 "?143 = {}/{}" -> "?109 = {+}/{}" [color=red];
 "?144 = {E}/{}" -> "?110 = {E,NE}/{}" [color=red];
 "?154 = {+}/{}" -> "?109 = {+}/{}" [color=red];
 "?155 = {NE}/{}" -> "?110 = {E,NE}/{}" [color=red];
 "?54 = {+}/{}" -> "?67 = {+}/{}" [color=red];
 "?55 = {NE}/{}" -> "?68 = {NE}/{}" [color=red];
 "?56 = {NE}/{CRASH_d}" -> "?69 = {NE}/{CRASH_d}" [color=red];
 "?64 = {+}/{}" -> "?67 = {+}/{}" [color=red];
 "?65 = {NE}/{}" -> "?68 = {NE}/{}" [color=red];
 "?66 = {NE}/{CRASH_d}" -> "?69 = {NE}/{CRASH_d}" [color=red];
 "?67 = {+}/{}" -> "?127 = {+}/{}" [color=red];
 "?68 = {NE}/{}" -> "?128 = {NE}/{}" [color=red];
 "?69 = {NE}/{CRASH_d}" -> "?129 = {NE}/{CRASH_d}" [color=red];
 "?73 = {+}/{}" -> "?84 = {+}/{}" [color=red];
 "?73 = {+}/{}" -> "?87 = {+}/{}" [color=red];
 "?74 = {NE}/{}" -> "?85 = {NE}/{}" [color=red];
 "?74 = {NE}/{}" -> "?88 = {NE}/{}" [color=red];
 "?76 = {}/{}" -> "?84 = {+}/{}" [color=red];
 "?77 = {}/{}" -> "?85 = {NE}/{}" [color=red];
 "?78 = {}/{}" -> "?86 = {E,NE}/{CRASH_d}" [color=red];
 "?79 = {}/{}" -> "?87 = {+}/{}" [color=red];
 "?80 = {}/{}" -> "?88 = {NE}/{}" [color=red];
 "?81 = {}/{CRASH_d}" -> "?89 = {}/{CRASH_d}" [color=red];
 "?82 = {E,NE}/{CRASH_d}" -> "?86 = {E,NE}/{CRASH_d}" [color=red];
 "?83 = {}/{}" -> "?89 = {}/{CRASH_d}" [color=red];
 "?84 = {+}/{}" -> "?100 = {+}/{}" [color=red];
 "?85 = {NE}/{}" -> "?101 = {NE}/{}" [color=red];
 "?86 = {E,NE}/{CRASH_d}" -> "?102 = {E,NE}/{CRASH_d}" [color=red];
 "?87 = {+}/{}" -> "?103 = {+}/{}" [color=red];
 "?88 = {NE}/{}" -> "?104 = {NE}/{}" [color=red];
 "?89 = {}/{CRASH_d}" -> "?105 = {}/{CRASH_d}" [color=red];
 "?91 = {+}/{}" -> "?109 = {+}/{}" [color=red];
 "?92 = {NE}/{}" -> "?110 = {E,NE}/{}" [color=red];
 "?93 = {+}/{}" -> "?73 = {+}/{}" [color=red];
 "?94 = {NE}/{}" -> "?74 = {NE}/{}" [color=red];
 "?95 = {E,NE}/{CRASH_d}" -> "?75 = {E,NE}/{CRASH_d}" [color=red];
 "?97 = {+}/{}" -> "?134 = {+}/{}" [color=red];
 "?98 = {+}/{}" -> "?135 = {+}/{}" [color=red];
 "?99 = {E,NE}/{}" -> "?136 = {E,NE}/{}" [color=red];
 "?106 = {}/{}" -> "?105 = {}/{CRASH_d}" [color=red];
 "?107 = {}/{}" -> "?106 = {}/{}" [color=red];
 "?108 = {}/{}" -> "?107 = {}/{}" [color=red];
 "?108 = {}/{}" -> "?96 = {}/{}" [color=red];
 "?110 = {E,NE}/{}" -> "?114 = {E,NE}/{}" [color=red];
 "?110 = {E,NE}/{}" -> "?132 = {E,NE}/{CRASH_d}" [color=red];
 "?114 = {E,NE}/{}" -> "?125 = {E,NE}/{}" [color=red];
 "?114 = {E,NE}/{}" -> "?129 = {NE}/{CRASH_d}" [color=red];
 "?116 = {E}/{}" -> "?118 = {NE}/{}" [color=red];
 "?121 = {E}/{}" -> "?124 = {NE}/{}" [color=red];
 "?133 = {}/{}" -> "?132 = {E,NE}/{CRASH_d}" [color=red];
 "?136 = {E,NE}/{}" -> "?138 = {NE}/{}" [color=red];
 "?141 = {}/{}" -> "?133 = {}/{}" [color=red];
 "?142 = {False}/{}" -> "?158 = {E,NE}/{CRASH_d}" [color=red];
 "?149 = {E}/{}" -> "?151 = {NE}/{}" [color=red];
 "?151 = {NE}/{}" -> "?153 = {NE}/{}" [color=red];
 "?153 = {NE}/{}" -> "?155 = {NE}/{}" [color=red];
 "?46 = {E,NE}/{CRASH_d}" -> "?56 = {NE}/{CRASH_d}" [color=red];
 "?46 = {E,NE}/{CRASH_d}" -> "?63 = {NE}/{CRASH_d}" [color=red];
 "?48 = {NE}/{CRASH_d}" -> "?53 = {NE}/{CRASH_d}" [color=red];
 "?49 = {}/{CRASH_d}" -> "?46 = {E,NE}/{CRASH_d}" [color=red];
 "?49 = {}/{CRASH_d}" -> "?48 = {NE}/{CRASH_d}" [color=red];
 "?50 = {False,True}/{}" -> "?69 = {NE}/{CRASH_d}" [color=red];
 "?58 = {E}/{}" -> "?60 = {NE}/{}" [color=red];
 "?63 = {NE}/{CRASH_d}" -> "?66 = {NE}/{CRASH_d}" [color=red];
 "?70 = --/{}" -> "?69 = {NE}/{CRASH_d}" [color=red];
 "?71 = --/{}" -> "?70 = --/{}" [color=red];
 "?72 = --/{}" -> "?71 = --/{}" [color=red];
 "?75 = {E,NE}/{CRASH_d}" -> "?82 = {E,NE}/{CRASH_d}" [color=red];
 "?75 = {E,NE}/{CRASH_d}" -> "?89 = {}/{CRASH_d}" [color=red];
 "?90 = --/{}" -> "?89 = {}/{CRASH_d}" [color=red];
 "?96 = {}/{}" -> "?95 = {E,NE}/{CRASH_d}" [color=red];
 "fromList [CRASH_d]" -> "?81 = {}/{CRASH_d}" [color=red];
 "V ?100 :<: ?44" [style=filled];
 "V ?101 :<: ?45" [style=filled];
 "V ?102 :<: ?46" [style=filled];
 "V ?103 :<: ?47" [style=filled];
 "V ?104 :<: ?48" [style=filled];
 "V ?105 :<: ?49" [style=filled];
 "V ?109 :<: ?117" [style=filled];
 "V ?109 :<: ?51" [style=filled];
 "V ?109 :<: ?97" [style=filled];
 "V ?109 :<: ?98" [style=filled];
 "V ?111 :<: ?130" [style=filled];
 "V ?112 :<: ?131" [style=filled];
 "V ?113 :<: ?132" [style=filled];
 "V ?115 :<: ?117" [style=filled];
 "V ?117 :<: ?122" [style=filled];
 "V ?118 :<: ?123" [style=filled];
 "V ?119 :<: ?122" [style=filled];
 "V ?120 :<: ?123" [style=filled];
 "V ?122 :<: ?127" [style=filled];
 "V ?123 :<: ?128" [style=filled];
 "V ?124 :<: ?129" [style=filled];
 "V ?125 :<: ?99" [style=filled];
 "V ?126 :<: ?50" [style=filled];
 "V ?127 :<: ?130" [style=filled];
 "V ?128 :<: ?131" [style=filled];
 "V ?129 :<: ?132" [style=filled];
 "V ?130 :<: ?156" [style=filled];
 "V ?130 :<: ?93" [style=filled];
 "V ?131 :<: ?157" [style=filled];
 "V ?131 :<: ?94" [style=filled];
 "V ?132 :<: ?158" [style=filled];
 "V ?132 :<: ?95" [style=filled];
 "V ?133 :<: ?96" [style=filled];
 "V ?134 :<: ?137" [style=filled];
 "V ?135 :<: ?137" [style=filled];
 "V ?137 :<: ?91" [style=filled];
 "V ?138 :<: ?92" [style=filled];
 "V ?139 :<: ?106" [style=filled];
 "V ?140 :<: ?107" [style=filled];
 "V ?141 :<: ?108" [style=filled];
 "V ?143 :<: ?109" [style=filled];
 "V ?144 :<: ?110" [style=filled];
 "V ?145 :<: ?154" [style=filled];
 "V ?146 :<: ?152" [style=filled];
 "V ?147 :<: ?150" [style=filled];
 "V ?148 :<: ?150" [style=filled];
 "V ?150 :<: ?152" [style=filled];
 "V ?152 :<: ?154" [style=filled];
 "V ?154 :<: ?109" [style=filled];
 "V ?155 :<: ?110" [style=filled];
 "V ?44 :<: ?54" [style=filled];
 "V ?44 :<: ?61" [style=filled];
 "V ?45 :<: ?55" [style=filled];
 "V ?45 :<: ?62" [style=filled];
 "V ?47 :<: ?52" [style=filled];
 "V ?47 :<: ?61" [style=filled];
 "V ?48 :<: ?62" [style=filled];
 "V ?51 :<: ?52" [style=filled];
 "V ?51 :<: ?59" [style=filled];
 "V ?52 :<: ?54" [style=filled];
 "V ?53 :<: ?55" [style=filled];
 "V ?54 :<: ?67" [style=filled];
 "V ?55 :<: ?68" [style=filled];
 "V ?56 :<: ?69" [style=filled];
 "V ?57 :<: ?59" [style=filled];
 "V ?59 :<: ?64" [style=filled];
 "V ?60 :<: ?65" [style=filled];
 "V ?61 :<: ?64" [style=filled];
 "V ?62 :<: ?65" [style=filled];
 "V ?64 :<: ?67" [style=filled];
 "V ?65 :<: ?68" [style=filled];
 "V ?66 :<: ?69" [style=filled];
 "V ?67 :<: ?127" [style=filled];
 "V ?68 :<: ?128" [style=filled];
 "V ?69 :<: ?129" [style=filled];
 "V ?73 :<: ?84" [style=filled];
 "V ?73 :<: ?87" [style=filled];
 "V ?74 :<: ?85" [style=filled];
 "V ?74 :<: ?88" [style=filled];
 "V ?76 :<: ?84" [style=filled];
 "V ?77 :<: ?85" [style=filled];
 "V ?78 :<: ?86" [style=filled];
 "V ?79 :<: ?87" [style=filled];
 "V ?80 :<: ?88" [style=filled];
 "V ?81 :<: ?89" [style=filled];
 "V ?82 :<: ?86" [style=filled];
 "V ?83 :<: ?89" [style=filled];
 "V ?84 :<: ?100" [style=filled];
 "V ?85 :<: ?101" [style=filled];
 "V ?86 :<: ?102" [style=filled];
 "V ?87 :<: ?103" [style=filled];
 "V ?88 :<: ?104" [style=filled];
 "V ?89 :<: ?105" [style=filled];
 "V ?91 :<: ?109" [style=filled];
 "V ?92 :<: ?110" [style=filled];
 "V ?93 :<: ?73" [style=filled];
 "V ?94 :<: ?74" [style=filled];
 "V ?95 :<: ?75" [style=filled];
 "V ?97 :<: ?134" [style=filled];
 "V ?98 :<: ?135" [style=filled];
 "V ?99 :<: ?136" [style=filled];
 "C (fromList [False]) :<: ?142" [style=filled];
 "C (fromList [False,True]) :<: ?126" [style=filled];
 "C (fromList [+]) :<: ?145" [style=filled];
 "C (fromList [+]) :<: ?146" [style=filled];
 "C (fromList [+]) :<: ?147" [style=filled];
 "C (fromList [E]) :<: ?113" [style=filled];
 "C (fromList [E]) :<: ?116" [style=filled];
 "C (fromList [E]) :<: ?121" [style=filled];
 "C (fromList [E]) :<: ?144" [style=filled];
 "C (fromList [E]) :<: ?149" [style=filled];
 "C (fromList [E]) :<: ?58" [style=filled];
 "C (fromList [E,NE]) :<: ?114" [style=filled];
 "C (fromList [E,NE]) :<: ?125" [style=filled];
 "C (fromList [E,NE]) :<: ?82" [style=filled];
 "C (fromList [NE]) :<: ?118" [style=filled];
 "C (fromList [NE]) :<: ?124" [style=filled];
 "C (fromList [NE]) :<: ?138" [style=filled];
 "C (fromList [NE]) :<: ?151" [style=filled];
 "C (fromList [NE]) :<: ?153" [style=filled];
 "C (fromList [NE]) :<: ?155" [style=filled];
 "C (fromList [NE]) :<: ?53" [style=filled];
 "C (fromList [NE]) :<: ?56" [style=filled];
 "C (fromList [NE]) :<: ?60" [style=filled];
 "C (fromList [NE]) :<: ?63" [style=filled];
 "C (fromList [NE]) :<: ?66" [style=filled];
 "V ?100 :<: ?44" [style=filled,fillcolor=lightpink];
 "V ?101 :<: ?45" [style=filled,fillcolor=lightpink];
 "V ?102 :<: ?46" [style=filled,fillcolor=lightpink];
 "V ?103 :<: ?47" [style=filled,fillcolor=lightpink];
 "V ?104 :<: ?48" [style=filled,fillcolor=lightpink];
 "V ?105 :<: ?49" [style=filled,fillcolor=lightpink];
 "V ?109 :<: ?126" [style=filled,fillcolor=lightpink];
 "V ?109 :<: ?51" [style=filled,fillcolor=lightpink];
 "V ?109 :<: ?97" [style=filled,fillcolor=lightpink];
 "V ?109 :<: ?98" [style=filled,fillcolor=lightpink];
 "V ?111 :<: ?130" [style=filled,fillcolor=lightpink];
 "V ?112 :<: ?131" [style=filled,fillcolor=lightpink];
 "V ?113 :<: ?132" [style=filled,fillcolor=lightpink];
 "V ?122 :<: ?127" [style=filled,fillcolor=lightpink];
 "V ?123 :<: ?128" [style=filled,fillcolor=lightpink];
 "V ?124 :<: ?129" [style=filled,fillcolor=lightpink];
 "V ?125 :<: ?99" [style=filled,fillcolor=lightpink];
 "V ?126 :<: ?50" [style=filled,fillcolor=lightpink];
 "V ?127 :<: ?130" [style=filled,fillcolor=lightpink];
 "V ?128 :<: ?131" [style=filled,fillcolor=lightpink];
 "V ?129 :<: ?132" [style=filled,fillcolor=lightpink];
 "V ?130 :<: ?156" [style=filled,fillcolor=lightpink];
 "V ?130 :<: ?93" [style=filled,fillcolor=lightpink];
 "V ?131 :<: ?157" [style=filled,fillcolor=lightpink];
 "V ?131 :<: ?94" [style=filled,fillcolor=lightpink];
 "V ?132 :<: ?158" [style=filled,fillcolor=lightpink];
 "V ?132 :<: ?95" [style=filled,fillcolor=lightpink];
 "V ?133 :<: ?96" [style=filled,fillcolor=lightpink];
 "V ?137 :<: ?91" [style=filled,fillcolor=lightpink];
 "V ?138 :<: ?92" [style=filled,fillcolor=lightpink];
 "V ?139 :<: ?106" [style=filled,fillcolor=lightpink];
 "V ?140 :<: ?107" [style=filled,fillcolor=lightpink];
 "V ?141 :<: ?108" [style=filled,fillcolor=lightpink];
 "V ?143 :<: ?109" [style=filled,fillcolor=lightpink];
 "V ?144 :<: ?110" [style=filled,fillcolor=lightpink];
 "V ?154 :<: ?109" [style=filled,fillcolor=lightpink];
 "V ?155 :<: ?110" [style=filled,fillcolor=lightpink];
 "V ?54 :<: ?67" [style=filled,fillcolor=lightpink];
 "V ?55 :<: ?68" [style=filled,fillcolor=lightpink];
 "V ?56 :<: ?69" [style=filled,fillcolor=lightpink];
 "V ?64 :<: ?67" [style=filled,fillcolor=lightpink];
 "V ?65 :<: ?68" [style=filled,fillcolor=lightpink];
 "V ?66 :<: ?69" [style=filled,fillcolor=lightpink];
 "V ?67 :<: ?127" [style=filled,fillcolor=lightpink];
 "V ?68 :<: ?128" [style=filled,fillcolor=lightpink];
 "V ?69 :<: ?129" [style=filled,fillcolor=lightpink];
 "V ?73 :<: ?84" [style=filled,fillcolor=lightpink];
 "V ?73 :<: ?87" [style=filled,fillcolor=lightpink];
 "V ?74 :<: ?85" [style=filled,fillcolor=lightpink];
 "V ?74 :<: ?88" [style=filled,fillcolor=lightpink];
 "V ?76 :<: ?84" [style=filled,fillcolor=lightpink];
 "V ?77 :<: ?85" [style=filled,fillcolor=lightpink];
 "V ?78 :<: ?86" [style=filled,fillcolor=lightpink];
 "V ?79 :<: ?87" [style=filled,fillcolor=lightpink];
 "V ?80 :<: ?88" [style=filled,fillcolor=lightpink];
 "V ?81 :<: ?89" [style=filled,fillcolor=lightpink];
 "V ?82 :<: ?86" [style=filled,fillcolor=lightpink];
 "V ?83 :<: ?89" [style=filled,fillcolor=lightpink];
 "V ?84 :<: ?100" [style=filled,fillcolor=lightpink];
 "V ?85 :<: ?101" [style=filled,fillcolor=lightpink];
 "V ?86 :<: ?102" [style=filled,fillcolor=lightpink];
 "V ?87 :<: ?103" [style=filled,fillcolor=lightpink];
 "V ?88 :<: ?104" [style=filled,fillcolor=lightpink];
 "V ?89 :<: ?105" [style=filled,fillcolor=lightpink];
 "V ?91 :<: ?109" [style=filled,fillcolor=lightpink];
 "V ?92 :<: ?110" [style=filled,fillcolor=lightpink];
 "V ?93 :<: ?73" [style=filled,fillcolor=lightpink];
 "V ?94 :<: ?74" [style=filled,fillcolor=lightpink];
 "V ?95 :<: ?75" [style=filled,fillcolor=lightpink];
 "V ?97 :<: ?134" [style=filled,fillcolor=lightpink];
 "V ?98 :<: ?135" [style=filled,fillcolor=lightpink];
 "V ?99 :<: ?136" [style=filled,fillcolor=lightpink];
 "C (fromList [?106]) :<: ?105" [style=filled,fillcolor=lightpink];
 "C (fromList [?107]) :<: ?106" [style=filled,fillcolor=lightpink];
 "C (fromList [?108]) :<: ?107" [style=filled,fillcolor=lightpink];
 "C (fromList [?108]) :<: ?96" [style=filled,fillcolor=lightpink];
 "C (fromList [?110]) :<: ?114" [style=filled,fillcolor=lightpink];
 "C (fromList [?110]) :<: ?132" [style=filled,fillcolor=lightpink];
 "C (fromList [?114]) :<: ?125" [style=filled,fillcolor=lightpink];
 "C (fromList [?114]) :<: ?129" [style=filled,fillcolor=lightpink];
 "C (fromList [?116]) :<: ?118" [style=filled,fillcolor=lightpink];
 "C (fromList [?121]) :<: ?124" [style=filled,fillcolor=lightpink];
 "C (fromList [?133]) :<: ?132" [style=filled,fillcolor=lightpink];
 "C (fromList [?136]) :<: ?138" [style=filled,fillcolor=lightpink];
 "C (fromList [?141]) :<: ?133" [style=filled,fillcolor=lightpink];
 "C (fromList [?142]) :<: ?158" [style=filled,fillcolor=lightpink];
 "C (fromList [?149]) :<: ?151" [style=filled,fillcolor=lightpink];
 "C (fromList [?151]) :<: ?153" [style=filled,fillcolor=lightpink];
 "C (fromList [?153]) :<: ?155" [style=filled,fillcolor=lightpink];
 "C (fromList [?46]) :<: ?56" [style=filled,fillcolor=lightpink];
 "C (fromList [?46]) :<: ?63" [style=filled,fillcolor=lightpink];
 "C (fromList [?48]) :<: ?53" [style=filled,fillcolor=lightpink];
 "C (fromList [?49]) :<: ?46" [style=filled,fillcolor=lightpink];
 "C (fromList [?49]) :<: ?48" [style=filled,fillcolor=lightpink];
 "C (fromList [?50]) :<: ?69" [style=filled,fillcolor=lightpink];
 "C (fromList [?58]) :<: ?60" [style=filled,fillcolor=lightpink];
 "C (fromList [?63]) :<: ?66" [style=filled,fillcolor=lightpink];
 "C (fromList [?70]) :<: ?69" [style=filled,fillcolor=lightpink];
 "C (fromList [?71]) :<: ?70" [style=filled,fillcolor=lightpink];
 "C (fromList [?72]) :<: ?71" [style=filled,fillcolor=lightpink];
 "C (fromList [?75]) :<: ?82" [style=filled,fillcolor=lightpink];
 "C (fromList [?75]) :<: ?89" [style=filled,fillcolor=lightpink];
 "C (fromList [?90]) :<: ?89" [style=filled,fillcolor=lightpink];
 "C (fromList [?96]) :<: ?95" [style=filled,fillcolor=lightpink];
 "C (fromList [CRASH_d]) :<: ?81" [style=filled,fillcolor=lightpink];
 "?100 = {+}/{}" -> "V ?100 :<: ?44";
 "?101 = {NE}/{}" -> "V ?101 :<: ?45";
 "?102 = {E,NE}/{CRASH_d}" -> "V ?102 :<: ?46";
 "?103 = {+}/{}" -> "V ?103 :<: ?47";
 "?104 = {NE}/{}" -> "V ?104 :<: ?48";
 "?105 = {}/{CRASH_d}" -> "V ?105 :<: ?49";
 "?109 = {+}/{}" -> "V ?109 :<: ?117";
 "?109 = {+}/{}" -> "V ?109 :<: ?51";
 "?109 = {+}/{}" -> "V ?109 :<: ?97";
 "?109 = {+}/{}" -> "V ?109 :<: ?98";
 "?111 = {}/{}" -> "V ?111 :<: ?130";
 "?112 = {}/{}" -> "V ?112 :<: ?131";
 "?113 = {E}/{}" -> "V ?113 :<: ?132";
 "?115 = {}/--" -> "V ?115 :<: ?117";
 "?117 = {+}/--" -> "V ?117 :<: ?122";
 "?118 = {NE}/{}" -> "V ?118 :<: ?123";
 "?119 = {}/--" -> "V ?119 :<: ?122";
 "?120 = {}/--" -> "V ?120 :<: ?123";
 "?122 = {+}/{}" -> "V ?122 :<: ?127";
 "?123 = {NE}/{}" -> "V ?123 :<: ?128";
 "?124 = {NE}/{}" -> "V ?124 :<: ?129";
 "?125 = {E,NE}/{}" -> "V ?125 :<: ?99";
 "?126 = {False,True}/{}" -> "V ?126 :<: ?50";
 "?127 = {+}/{}" -> "V ?127 :<: ?130";
 "?128 = {NE}/{}" -> "V ?128 :<: ?131";
 "?129 = {NE}/{CRASH_d}" -> "V ?129 :<: ?132";
 "?130 = {+}/{}" -> "V ?130 :<: ?156";
 "?130 = {+}/{}" -> "V ?130 :<: ?93";
 "?131 = {NE}/{}" -> "V ?131 :<: ?157";
 "?131 = {NE}/{}" -> "V ?131 :<: ?94";
 "?132 = {E,NE}/{CRASH_d}" -> "V ?132 :<: ?158";
 "?132 = {E,NE}/{CRASH_d}" -> "V ?132 :<: ?95";
 "?133 = {}/{}" -> "V ?133 :<: ?96";
 "?134 = {+}/{}" -> "V ?134 :<: ?137";
 "?135 = {+}/{}" -> "V ?135 :<: ?137";
 "?137 = {+}/{}" -> "V ?137 :<: ?91";
 "?138 = {NE}/{}" -> "V ?138 :<: ?92";
 "?139 = {}/{}" -> "V ?139 :<: ?106";
 "?140 = {}/{}" -> "V ?140 :<: ?107";
 "?141 = {}/{}" -> "V ?141 :<: ?108";
 "?143 = {}/{}" -> "V ?143 :<: ?109";
 "?144 = {E}/{}" -> "V ?144 :<: ?110";
 "?145 = {+}/--" -> "V ?145 :<: ?154";
 "?146 = {+}/--" -> "V ?146 :<: ?152";
 "?147 = {+}/--" -> "V ?147 :<: ?150";
 "?148 = {}/--" -> "V ?148 :<: ?150";
 "?150 = {+}/--" -> "V ?150 :<: ?152";
 "?152 = {+}/--" -> "V ?152 :<: ?154";
 "?154 = {+}/{}" -> "V ?154 :<: ?109";
 "?155 = {NE}/{}" -> "V ?155 :<: ?110";
 "?44 = {+}/{}" -> "V ?44 :<: ?54";
 "?44 = {+}/{}" -> "V ?44 :<: ?61";
 "?45 = {NE}/{}" -> "V ?45 :<: ?55";
 "?45 = {NE}/{}" -> "V ?45 :<: ?62";
 "?47 = {+}/{}" -> "V ?47 :<: ?52";
 "?47 = {+}/{}" -> "V ?47 :<: ?61";
 "?48 = {NE}/{CRASH_d}" -> "V ?48 :<: ?62";
 "?51 = {+}/{}" -> "V ?51 :<: ?52";
 "?51 = {+}/{}" -> "V ?51 :<: ?59";
 "?52 = {+}/--" -> "V ?52 :<: ?54";
 "?53 = {NE}/{CRASH_d}" -> "V ?53 :<: ?55";
 "?54 = {+}/{}" -> "V ?54 :<: ?67";
 "?55 = {NE}/{}" -> "V ?55 :<: ?68";
 "?56 = {NE}/{CRASH_d}" -> "V ?56 :<: ?69";
 "?57 = {}/--" -> "V ?57 :<: ?59";
 "?59 = {+}/--" -> "V ?59 :<: ?64";
 "?60 = {NE}/{}" -> "V ?60 :<: ?65";
 "?61 = {+}/--" -> "V ?61 :<: ?64";
 "?62 = {NE}/--" -> "V ?62 :<: ?65";
 "?64 = {+}/{}" -> "V ?64 :<: ?67";
 "?65 = {NE}/{}" -> "V ?65 :<: ?68";
 "?66 = {NE}/{CRASH_d}" -> "V ?66 :<: ?69";
 "?67 = {+}/{}" -> "V ?67 :<: ?127";
 "?68 = {NE}/{}" -> "V ?68 :<: ?128";
 "?69 = {NE}/{CRASH_d}" -> "V ?69 :<: ?129";
 "?73 = {+}/{}" -> "V ?73 :<: ?84";
 "?73 = {+}/{}" -> "V ?73 :<: ?87";
 "?74 = {NE}/{}" -> "V ?74 :<: ?85";
 "?74 = {NE}/{}" -> "V ?74 :<: ?88";
 "?76 = {}/{}" -> "V ?76 :<: ?84";
 "?77 = {}/{}" -> "V ?77 :<: ?85";
 "?78 = {}/{}" -> "V ?78 :<: ?86";
 "?79 = {}/{}" -> "V ?79 :<: ?87";
 "?80 = {}/{}" -> "V ?80 :<: ?88";
 "?81 = {}/{CRASH_d}" -> "V ?81 :<: ?89";
 "?82 = {E,NE}/{CRASH_d}" -> "V ?82 :<: ?86";
 "?83 = {}/{}" -> "V ?83 :<: ?89";
 "?84 = {+}/{}" -> "V ?84 :<: ?100";
 "?85 = {NE}/{}" -> "V ?85 :<: ?101";
 "?86 = {E,NE}/{CRASH_d}" -> "V ?86 :<: ?102";
 "?87 = {+}/{}" -> "V ?87 :<: ?103";
 "?88 = {NE}/{}" -> "V ?88 :<: ?104";
 "?89 = {}/{CRASH_d}" -> "V ?89 :<: ?105";
 "?91 = {+}/{}" -> "V ?91 :<: ?109";
 "?92 = {NE}/{}" -> "V ?92 :<: ?110";
 "?93 = {+}/{}" -> "V ?93 :<: ?73";
 "?94 = {NE}/{}" -> "V ?94 :<: ?74";
 "?95 = {E,NE}/{CRASH_d}" -> "V ?95 :<: ?75";
 "?97 = {+}/{}" -> "V ?97 :<: ?134";
 "?98 = {+}/{}" -> "V ?98 :<: ?135";
 "?99 = {E,NE}/{}" -> "V ?99 :<: ?136";
 "?100 = {+}/{}" -> "V ?100 :<: ?44"[color=red];
 "?101 = {NE}/{}" -> "V ?101 :<: ?45"[color=red];
 "?102 = {E,NE}/{CRASH_d}" -> "V ?102 :<: ?46"[color=red];
 "?103 = {+}/{}" -> "V ?103 :<: ?47"[color=red];
 "?104 = {NE}/{}" -> "V ?104 :<: ?48"[color=red];
 "?105 = {}/{CRASH_d}" -> "V ?105 :<: ?49"[color=red];
 "?109 = {+}/{}" -> "V ?109 :<: ?126"[color=red];
 "?109 = {+}/{}" -> "V ?109 :<: ?51"[color=red];
 "?109 = {+}/{}" -> "V ?109 :<: ?97"[color=red];
 "?109 = {+}/{}" -> "V ?109 :<: ?98"[color=red];
 "?111 = {}/{}" -> "V ?111 :<: ?130"[color=red];
 "?112 = {}/{}" -> "V ?112 :<: ?131"[color=red];
 "?113 = {E}/{}" -> "V ?113 :<: ?132"[color=red];
 "?122 = {+}/{}" -> "V ?122 :<: ?127"[color=red];
 "?123 = {NE}/{}" -> "V ?123 :<: ?128"[color=red];
 "?124 = {NE}/{}" -> "V ?124 :<: ?129"[color=red];
 "?125 = {E,NE}/{}" -> "V ?125 :<: ?99"[color=red];
 "?126 = {False,True}/{}" -> "V ?126 :<: ?50"[color=red];
 "?127 = {+}/{}" -> "V ?127 :<: ?130"[color=red];
 "?128 = {NE}/{}" -> "V ?128 :<: ?131"[color=red];
 "?129 = {NE}/{CRASH_d}" -> "V ?129 :<: ?132"[color=red];
 "?130 = {+}/{}" -> "V ?130 :<: ?156"[color=red];
 "?130 = {+}/{}" -> "V ?130 :<: ?93"[color=red];
 "?131 = {NE}/{}" -> "V ?131 :<: ?157"[color=red];
 "?131 = {NE}/{}" -> "V ?131 :<: ?94"[color=red];
 "?132 = {E,NE}/{CRASH_d}" -> "V ?132 :<: ?158"[color=red];
 "?132 = {E,NE}/{CRASH_d}" -> "V ?132 :<: ?95"[color=red];
 "?133 = {}/{}" -> "V ?133 :<: ?96"[color=red];
 "?137 = {+}/{}" -> "V ?137 :<: ?91"[color=red];
 "?138 = {NE}/{}" -> "V ?138 :<: ?92"[color=red];
 "?139 = {}/{}" -> "V ?139 :<: ?106"[color=red];
 "?140 = {}/{}" -> "V ?140 :<: ?107"[color=red];
 "?141 = {}/{}" -> "V ?141 :<: ?108"[color=red];
 "?143 = {}/{}" -> "V ?143 :<: ?109"[color=red];
 "?144 = {E}/{}" -> "V ?144 :<: ?110"[color=red];
 "?154 = {+}/{}" -> "V ?154 :<: ?109"[color=red];
 "?155 = {NE}/{}" -> "V ?155 :<: ?110"[color=red];
 "?54 = {+}/{}" -> "V ?54 :<: ?67"[color=red];
 "?55 = {NE}/{}" -> "V ?55 :<: ?68"[color=red];
 "?56 = {NE}/{CRASH_d}" -> "V ?56 :<: ?69"[color=red];
 "?64 = {+}/{}" -> "V ?64 :<: ?67"[color=red];
 "?65 = {NE}/{}" -> "V ?65 :<: ?68"[color=red];
 "?66 = {NE}/{CRASH_d}" -> "V ?66 :<: ?69"[color=red];
 "?67 = {+}/{}" -> "V ?67 :<: ?127"[color=red];
 "?68 = {NE}/{}" -> "V ?68 :<: ?128"[color=red];
 "?69 = {NE}/{CRASH_d}" -> "V ?69 :<: ?129"[color=red];
 "?73 = {+}/{}" -> "V ?73 :<: ?84"[color=red];
 "?73 = {+}/{}" -> "V ?73 :<: ?87"[color=red];
 "?74 = {NE}/{}" -> "V ?74 :<: ?85"[color=red];
 "?74 = {NE}/{}" -> "V ?74 :<: ?88"[color=red];
 "?76 = {}/{}" -> "V ?76 :<: ?84"[color=red];
 "?77 = {}/{}" -> "V ?77 :<: ?85"[color=red];
 "?78 = {}/{}" -> "V ?78 :<: ?86"[color=red];
 "?79 = {}/{}" -> "V ?79 :<: ?87"[color=red];
 "?80 = {}/{}" -> "V ?80 :<: ?88"[color=red];
 "?81 = {}/{CRASH_d}" -> "V ?81 :<: ?89"[color=red];
 "?82 = {E,NE}/{CRASH_d}" -> "V ?82 :<: ?86"[color=red];
 "?83 = {}/{}" -> "V ?83 :<: ?89"[color=red];
 "?84 = {+}/{}" -> "V ?84 :<: ?100"[color=red];
 "?85 = {NE}/{}" -> "V ?85 :<: ?101"[color=red];
 "?86 = {E,NE}/{CRASH_d}" -> "V ?86 :<: ?102"[color=red];
 "?87 = {+}/{}" -> "V ?87 :<: ?103"[color=red];
 "?88 = {NE}/{}" -> "V ?88 :<: ?104"[color=red];
 "?89 = {}/{CRASH_d}" -> "V ?89 :<: ?105"[color=red];
 "?91 = {+}/{}" -> "V ?91 :<: ?109"[color=red];
 "?92 = {NE}/{}" -> "V ?92 :<: ?110"[color=red];
 "?93 = {+}/{}" -> "V ?93 :<: ?73"[color=red];
 "?94 = {NE}/{}" -> "V ?94 :<: ?74"[color=red];
 "?95 = {E,NE}/{CRASH_d}" -> "V ?95 :<: ?75"[color=red];
 "?97 = {+}/{}" -> "V ?97 :<: ?134"[color=red];
 "?98 = {+}/{}" -> "V ?98 :<: ?135"[color=red];
 "?99 = {E,NE}/{}" -> "V ?99 :<: ?136"[color=red];
 "?106 = {}/{}" -> "C (fromList [?106]) :<: ?105"[color=red];
 "?107 = {}/{}" -> "C (fromList [?107]) :<: ?106"[color=red];
 "?108 = {}/{}" -> "C (fromList [?108]) :<: ?107"[color=red];
 "?108 = {}/{}" -> "C (fromList [?108]) :<: ?96"[color=red];
 "?110 = {E,NE}/{}" -> "C (fromList [?110]) :<: ?114"[color=red];
 "?110 = {E,NE}/{}" -> "C (fromList [?110]) :<: ?132"[color=red];
 "?114 = {E,NE}/{}" -> "C (fromList [?114]) :<: ?125"[color=red];
 "?114 = {E,NE}/{}" -> "C (fromList [?114]) :<: ?129"[color=red];
 "?116 = {E}/{}" -> "C (fromList [?116]) :<: ?118"[color=red];
 "?121 = {E}/{}" -> "C (fromList [?121]) :<: ?124"[color=red];
 "?133 = {}/{}" -> "C (fromList [?133]) :<: ?132"[color=red];
 "?136 = {E,NE}/{}" -> "C (fromList [?136]) :<: ?138"[color=red];
 "?141 = {}/{}" -> "C (fromList [?141]) :<: ?133"[color=red];
 "?142 = {False}/{}" -> "C (fromList [?142]) :<: ?158"[color=red];
 "?149 = {E}/{}" -> "C (fromList [?149]) :<: ?151"[color=red];
 "?151 = {NE}/{}" -> "C (fromList [?151]) :<: ?153"[color=red];
 "?153 = {NE}/{}" -> "C (fromList [?153]) :<: ?155"[color=red];
 "?46 = {E,NE}/{CRASH_d}" -> "C (fromList [?46]) :<: ?56"[color=red];
 "?46 = {E,NE}/{CRASH_d}" -> "C (fromList [?46]) :<: ?63"[color=red];
 "?48 = {NE}/{CRASH_d}" -> "C (fromList [?48]) :<: ?53"[color=red];
 "?49 = {}/{CRASH_d}" -> "C (fromList [?49]) :<: ?46"[color=red];
 "?49 = {}/{CRASH_d}" -> "C (fromList [?49]) :<: ?48"[color=red];
 "?50 = {False,True}/{}" -> "C (fromList [?50]) :<: ?69"[color=red];
 "?58 = {E}/{}" -> "C (fromList [?58]) :<: ?60"[color=red];
 "?63 = {NE}/{CRASH_d}" -> "C (fromList [?63]) :<: ?66"[color=red];
 "?70 = --/{}" -> "C (fromList [?70]) :<: ?69"[color=red];
 "?71 = --/{}" -> "C (fromList [?71]) :<: ?70"[color=red];
 "?72 = --/{}" -> "C (fromList [?72]) :<: ?71"[color=red];
 "?75 = {E,NE}/{CRASH_d}" -> "C (fromList [?75]) :<: ?82"[color=red];
 "?75 = {E,NE}/{CRASH_d}" -> "C (fromList [?75]) :<: ?89"[color=red];
 "?90 = --/{}" -> "C (fromList [?90]) :<: ?89"[color=red];
 "?96 = {}/{}" -> "C (fromList [?96]) :<: ?95"[color=red];
 "V ?100 :<: ?44" -> "?44 = {+}/{}";
 "V ?101 :<: ?45" -> "?45 = {NE}/{}";
 "V ?102 :<: ?46" -> "?46 = {E,NE}/{CRASH_d}";
 "V ?103 :<: ?47" -> "?47 = {+}/{}";
 "V ?104 :<: ?48" -> "?48 = {NE}/{CRASH_d}";
 "V ?105 :<: ?49" -> "?49 = {}/{CRASH_d}";
 "V ?109 :<: ?117" -> "?117 = {+}/--";
 "V ?109 :<: ?51" -> "?51 = {+}/{}";
 "V ?109 :<: ?97" -> "?97 = {+}/{}";
 "V ?109 :<: ?98" -> "?98 = {+}/{}";
 "V ?111 :<: ?130" -> "?130 = {+}/{}";
 "V ?112 :<: ?131" -> "?131 = {NE}/{}";
 "V ?113 :<: ?132" -> "?132 = {E,NE}/{CRASH_d}";
 "V ?115 :<: ?117" -> "?117 = {+}/--";
 "V ?117 :<: ?122" -> "?122 = {+}/{}";
 "V ?118 :<: ?123" -> "?123 = {NE}/{}";
 "V ?119 :<: ?122" -> "?122 = {+}/{}";
 "V ?120 :<: ?123" -> "?123 = {NE}/{}";
 "V ?122 :<: ?127" -> "?127 = {+}/{}";
 "V ?123 :<: ?128" -> "?128 = {NE}/{}";
 "V ?124 :<: ?129" -> "?129 = {NE}/{CRASH_d}";
 "V ?125 :<: ?99" -> "?99 = {E,NE}/{}";
 "V ?126 :<: ?50" -> "?50 = {False,True}/{}";
 "V ?127 :<: ?130" -> "?130 = {+}/{}";
 "V ?128 :<: ?131" -> "?131 = {NE}/{}";
 "V ?129 :<: ?132" -> "?132 = {E,NE}/{CRASH_d}";
 "V ?130 :<: ?156" -> "?156 = {+}/{}";
 "V ?130 :<: ?93" -> "?93 = {+}/{}";
 "V ?131 :<: ?157" -> "?157 = {NE}/{}";
 "V ?131 :<: ?94" -> "?94 = {NE}/{}";
 "V ?132 :<: ?158" -> "?158 = {E,NE}/{CRASH_d}";
 "V ?132 :<: ?95" -> "?95 = {E,NE}/{CRASH_d}";
 "V ?133 :<: ?96" -> "?96 = {}/{}";
 "V ?134 :<: ?137" -> "?137 = {+}/{}";
 "V ?135 :<: ?137" -> "?137 = {+}/{}";
 "V ?137 :<: ?91" -> "?91 = {+}/{}";
 "V ?138 :<: ?92" -> "?92 = {NE}/{}";
 "V ?139 :<: ?106" -> "?106 = {}/{}";
 "V ?140 :<: ?107" -> "?107 = {}/{}";
 "V ?141 :<: ?108" -> "?108 = {}/{}";
 "V ?143 :<: ?109" -> "?109 = {+}/{}";
 "V ?144 :<: ?110" -> "?110 = {E,NE}/{}";
 "V ?145 :<: ?154" -> "?154 = {+}/{}";
 "V ?146 :<: ?152" -> "?152 = {+}/--";
 "V ?147 :<: ?150" -> "?150 = {+}/--";
 "V ?148 :<: ?150" -> "?150 = {+}/--";
 "V ?150 :<: ?152" -> "?152 = {+}/--";
 "V ?152 :<: ?154" -> "?154 = {+}/{}";
 "V ?154 :<: ?109" -> "?109 = {+}/{}";
 "V ?155 :<: ?110" -> "?110 = {E,NE}/{}";
 "V ?44 :<: ?54" -> "?54 = {+}/{}";
 "V ?44 :<: ?61" -> "?61 = {+}/--";
 "V ?45 :<: ?55" -> "?55 = {NE}/{}";
 "V ?45 :<: ?62" -> "?62 = {NE}/--";
 "V ?47 :<: ?52" -> "?52 = {+}/--";
 "V ?47 :<: ?61" -> "?61 = {+}/--";
 "V ?48 :<: ?62" -> "?62 = {NE}/--";
 "V ?51 :<: ?52" -> "?52 = {+}/--";
 "V ?51 :<: ?59" -> "?59 = {+}/--";
 "V ?52 :<: ?54" -> "?54 = {+}/{}";
 "V ?53 :<: ?55" -> "?55 = {NE}/{}";
 "V ?54 :<: ?67" -> "?67 = {+}/{}";
 "V ?55 :<: ?68" -> "?68 = {NE}/{}";
 "V ?56 :<: ?69" -> "?69 = {NE}/{CRASH_d}";
 "V ?57 :<: ?59" -> "?59 = {+}/--";
 "V ?59 :<: ?64" -> "?64 = {+}/{}";
 "V ?60 :<: ?65" -> "?65 = {NE}/{}";
 "V ?61 :<: ?64" -> "?64 = {+}/{}";
 "V ?62 :<: ?65" -> "?65 = {NE}/{}";
 "V ?64 :<: ?67" -> "?67 = {+}/{}";
 "V ?65 :<: ?68" -> "?68 = {NE}/{}";
 "V ?66 :<: ?69" -> "?69 = {NE}/{CRASH_d}";
 "V ?67 :<: ?127" -> "?127 = {+}/{}";
 "V ?68 :<: ?128" -> "?128 = {NE}/{}";
 "V ?69 :<: ?129" -> "?129 = {NE}/{CRASH_d}";
 "V ?73 :<: ?84" -> "?84 = {+}/{}";
 "V ?73 :<: ?87" -> "?87 = {+}/{}";
 "V ?74 :<: ?85" -> "?85 = {NE}/{}";
 "V ?74 :<: ?88" -> "?88 = {NE}/{}";
 "V ?76 :<: ?84" -> "?84 = {+}/{}";
 "V ?77 :<: ?85" -> "?85 = {NE}/{}";
 "V ?78 :<: ?86" -> "?86 = {E,NE}/{CRASH_d}";
 "V ?79 :<: ?87" -> "?87 = {+}/{}";
 "V ?80 :<: ?88" -> "?88 = {NE}/{}";
 "V ?81 :<: ?89" -> "?89 = {}/{CRASH_d}";
 "V ?82 :<: ?86" -> "?86 = {E,NE}/{CRASH_d}";
 "V ?83 :<: ?89" -> "?89 = {}/{CRASH_d}";
 "V ?84 :<: ?100" -> "?100 = {+}/{}";
 "V ?85 :<: ?101" -> "?101 = {NE}/{}";
 "V ?86 :<: ?102" -> "?102 = {E,NE}/{CRASH_d}";
 "V ?87 :<: ?103" -> "?103 = {+}/{}";
 "V ?88 :<: ?104" -> "?104 = {NE}/{}";
 "V ?89 :<: ?105" -> "?105 = {}/{CRASH_d}";
 "V ?91 :<: ?109" -> "?109 = {+}/{}";
 "V ?92 :<: ?110" -> "?110 = {E,NE}/{}";
 "V ?93 :<: ?73" -> "?73 = {+}/{}";
 "V ?94 :<: ?74" -> "?74 = {NE}/{}";
 "V ?95 :<: ?75" -> "?75 = {E,NE}/{CRASH_d}";
 "V ?97 :<: ?134" -> "?134 = {+}/{}";
 "V ?98 :<: ?135" -> "?135 = {+}/{}";
 "V ?99 :<: ?136" -> "?136 = {E,NE}/{}";
 "C (fromList [False]) :<: ?142" -> "?142 = {False}/{}";
 "C (fromList [False,True]) :<: ?126" -> "?126 = {False,True}/{}";
 "C (fromList [+]) :<: ?145" -> "?145 = {+}/--";
 "C (fromList [+]) :<: ?146" -> "?146 = {+}/--";
 "C (fromList [+]) :<: ?147" -> "?147 = {+}/--";
 "C (fromList [E]) :<: ?113" -> "?113 = {E}/{}";
 "C (fromList [E]) :<: ?116" -> "?116 = {E}/{}";
 "C (fromList [E]) :<: ?121" -> "?121 = {E}/{}";
 "C (fromList [E]) :<: ?144" -> "?144 = {E}/{}";
 "C (fromList [E]) :<: ?149" -> "?149 = {E}/{}";
 "C (fromList [E]) :<: ?58" -> "?58 = {E}/{}";
 "C (fromList [E,NE]) :<: ?114" -> "?114 = {E,NE}/{}";
 "C (fromList [E,NE]) :<: ?125" -> "?125 = {E,NE}/{}";
 "C (fromList [E,NE]) :<: ?82" -> "?82 = {E,NE}/{CRASH_d}";
 "C (fromList [NE]) :<: ?118" -> "?118 = {NE}/{}";
 "C (fromList [NE]) :<: ?124" -> "?124 = {NE}/{}";
 "C (fromList [NE]) :<: ?138" -> "?138 = {NE}/{}";
 "C (fromList [NE]) :<: ?151" -> "?151 = {NE}/{}";
 "C (fromList [NE]) :<: ?153" -> "?153 = {NE}/{}";
 "C (fromList [NE]) :<: ?155" -> "?155 = {NE}/{}";
 "C (fromList [NE]) :<: ?53" -> "?53 = {NE}/{CRASH_d}";
 "C (fromList [NE]) :<: ?56" -> "?56 = {NE}/{CRASH_d}";
 "C (fromList [NE]) :<: ?60" -> "?60 = {NE}/{}";
 "C (fromList [NE]) :<: ?63" -> "?63 = {NE}/{CRASH_d}";
 "C (fromList [NE]) :<: ?66" -> "?66 = {NE}/{CRASH_d}";
 "V ?100 :<: ?44" -> "?44 = {+}/{}"[color=red];
 "V ?101 :<: ?45" -> "?45 = {NE}/{}"[color=red];
 "V ?102 :<: ?46" -> "?46 = {E,NE}/{CRASH_d}"[color=red];
 "V ?103 :<: ?47" -> "?47 = {+}/{}"[color=red];
 "V ?104 :<: ?48" -> "?48 = {NE}/{CRASH_d}"[color=red];
 "V ?105 :<: ?49" -> "?49 = {}/{CRASH_d}"[color=red];
 "V ?109 :<: ?126" -> "?126 = {False,True}/{}"[color=red];
 "V ?109 :<: ?51" -> "?51 = {+}/{}"[color=red];
 "V ?109 :<: ?97" -> "?97 = {+}/{}"[color=red];
 "V ?109 :<: ?98" -> "?98 = {+}/{}"[color=red];
 "V ?111 :<: ?130" -> "?130 = {+}/{}"[color=red];
 "V ?112 :<: ?131" -> "?131 = {NE}/{}"[color=red];
 "V ?113 :<: ?132" -> "?132 = {E,NE}/{CRASH_d}"[color=red];
 "V ?122 :<: ?127" -> "?127 = {+}/{}"[color=red];
 "V ?123 :<: ?128" -> "?128 = {NE}/{}"[color=red];
 "V ?124 :<: ?129" -> "?129 = {NE}/{CRASH_d}"[color=red];
 "V ?125 :<: ?99" -> "?99 = {E,NE}/{}"[color=red];
 "V ?126 :<: ?50" -> "?50 = {False,True}/{}"[color=red];
 "V ?127 :<: ?130" -> "?130 = {+}/{}"[color=red];
 "V ?128 :<: ?131" -> "?131 = {NE}/{}"[color=red];
 "V ?129 :<: ?132" -> "?132 = {E,NE}/{CRASH_d}"[color=red];
 "V ?130 :<: ?156" -> "?156 = {+}/{}"[color=red];
 "V ?130 :<: ?93" -> "?93 = {+}/{}"[color=red];
 "V ?131 :<: ?157" -> "?157 = {NE}/{}"[color=red];
 "V ?131 :<: ?94" -> "?94 = {NE}/{}"[color=red];
 "V ?132 :<: ?158" -> "?158 = {E,NE}/{CRASH_d}"[color=red];
 "V ?132 :<: ?95" -> "?95 = {E,NE}/{CRASH_d}"[color=red];
 "V ?133 :<: ?96" -> "?96 = {}/{}"[color=red];
 "V ?137 :<: ?91" -> "?91 = {+}/{}"[color=red];
 "V ?138 :<: ?92" -> "?92 = {NE}/{}"[color=red];
 "V ?139 :<: ?106" -> "?106 = {}/{}"[color=red];
 "V ?140 :<: ?107" -> "?107 = {}/{}"[color=red];
 "V ?141 :<: ?108" -> "?108 = {}/{}"[color=red];
 "V ?143 :<: ?109" -> "?109 = {+}/{}"[color=red];
 "V ?144 :<: ?110" -> "?110 = {E,NE}/{}"[color=red];
 "V ?154 :<: ?109" -> "?109 = {+}/{}"[color=red];
 "V ?155 :<: ?110" -> "?110 = {E,NE}/{}"[color=red];
 "V ?54 :<: ?67" -> "?67 = {+}/{}"[color=red];
 "V ?55 :<: ?68" -> "?68 = {NE}/{}"[color=red];
 "V ?56 :<: ?69" -> "?69 = {NE}/{CRASH_d}"[color=red];
 "V ?64 :<: ?67" -> "?67 = {+}/{}"[color=red];
 "V ?65 :<: ?68" -> "?68 = {NE}/{}"[color=red];
 "V ?66 :<: ?69" -> "?69 = {NE}/{CRASH_d}"[color=red];
 "V ?67 :<: ?127" -> "?127 = {+}/{}"[color=red];
 "V ?68 :<: ?128" -> "?128 = {NE}/{}"[color=red];
 "V ?69 :<: ?129" -> "?129 = {NE}/{CRASH_d}"[color=red];
 "V ?73 :<: ?84" -> "?84 = {+}/{}"[color=red];
 "V ?73 :<: ?87" -> "?87 = {+}/{}"[color=red];
 "V ?74 :<: ?85" -> "?85 = {NE}/{}"[color=red];
 "V ?74 :<: ?88" -> "?88 = {NE}/{}"[color=red];
 "V ?76 :<: ?84" -> "?84 = {+}/{}"[color=red];
 "V ?77 :<: ?85" -> "?85 = {NE}/{}"[color=red];
 "V ?78 :<: ?86" -> "?86 = {E,NE}/{CRASH_d}"[color=red];
 "V ?79 :<: ?87" -> "?87 = {+}/{}"[color=red];
 "V ?80 :<: ?88" -> "?88 = {NE}/{}"[color=red];
 "V ?81 :<: ?89" -> "?89 = {}/{CRASH_d}"[color=red];
 "V ?82 :<: ?86" -> "?86 = {E,NE}/{CRASH_d}"[color=red];
 "V ?83 :<: ?89" -> "?89 = {}/{CRASH_d}"[color=red];
 "V ?84 :<: ?100" -> "?100 = {+}/{}"[color=red];
 "V ?85 :<: ?101" -> "?101 = {NE}/{}"[color=red];
 "V ?86 :<: ?102" -> "?102 = {E,NE}/{CRASH_d}"[color=red];
 "V ?87 :<: ?103" -> "?103 = {+}/{}"[color=red];
 "V ?88 :<: ?104" -> "?104 = {NE}/{}"[color=red];
 "V ?89 :<: ?105" -> "?105 = {}/{CRASH_d}"[color=red];
 "V ?91 :<: ?109" -> "?109 = {+}/{}"[color=red];
 "V ?92 :<: ?110" -> "?110 = {E,NE}/{}"[color=red];
 "V ?93 :<: ?73" -> "?73 = {+}/{}"[color=red];
 "V ?94 :<: ?74" -> "?74 = {NE}/{}"[color=red];
 "V ?95 :<: ?75" -> "?75 = {E,NE}/{CRASH_d}"[color=red];
 "V ?97 :<: ?134" -> "?134 = {+}/{}"[color=red];
 "V ?98 :<: ?135" -> "?135 = {+}/{}"[color=red];
 "V ?99 :<: ?136" -> "?136 = {E,NE}/{}"[color=red];
 "C (fromList [?106]) :<: ?105" -> "?105 = {}/{CRASH_d}"[color=red];
 "C (fromList [?107]) :<: ?106" -> "?106 = {}/{}"[color=red];
 "C (fromList [?108]) :<: ?107" -> "?107 = {}/{}"[color=red];
 "C (fromList [?108]) :<: ?96" -> "?96 = {}/{}"[color=red];
 "C (fromList [?110]) :<: ?114" -> "?114 = {E,NE}/{}"[color=red];
 "C (fromList [?110]) :<: ?132" -> "?132 = {E,NE}/{CRASH_d}"[color=red];
 "C (fromList [?114]) :<: ?125" -> "?125 = {E,NE}/{}"[color=red];
 "C (fromList [?114]) :<: ?129" -> "?129 = {NE}/{CRASH_d}"[color=red];
 "C (fromList [?116]) :<: ?118" -> "?118 = {NE}/{}"[color=red];
 "C (fromList [?121]) :<: ?124" -> "?124 = {NE}/{}"[color=red];
 "C (fromList [?133]) :<: ?132" -> "?132 = {E,NE}/{CRASH_d}"[color=red];
 "C (fromList [?136]) :<: ?138" -> "?138 = {NE}/{}"[color=red];
 "C (fromList [?141]) :<: ?133" -> "?133 = {}/{}"[color=red];
 "C (fromList [?142]) :<: ?158" -> "?158 = {E,NE}/{CRASH_d}"[color=red];
 "C (fromList [?149]) :<: ?151" -> "?151 = {NE}/{}"[color=red];
 "C (fromList [?151]) :<: ?153" -> "?153 = {NE}/{}"[color=red];
 "C (fromList [?153]) :<: ?155" -> "?155 = {NE}/{}"[color=red];
 "C (fromList [?46]) :<: ?56" -> "?56 = {NE}/{CRASH_d}"[color=red];
 "C (fromList [?46]) :<: ?63" -> "?63 = {NE}/{CRASH_d}"[color=red];
 "C (fromList [?48]) :<: ?53" -> "?53 = {NE}/{CRASH_d}"[color=red];
 "C (fromList [?49]) :<: ?46" -> "?46 = {E,NE}/{CRASH_d}"[color=red];
 "C (fromList [?49]) :<: ?48" -> "?48 = {NE}/{CRASH_d}"[color=red];
 "C (fromList [?50]) :<: ?69" -> "?69 = {NE}/{CRASH_d}"[color=red];
 "C (fromList [?58]) :<: ?60" -> "?60 = {NE}/{}"[color=red];
 "C (fromList [?63]) :<: ?66" -> "?66 = {NE}/{CRASH_d}"[color=red];
 "C (fromList [?70]) :<: ?69" -> "?69 = {NE}/{CRASH_d}"[color=red];
 "C (fromList [?71]) :<: ?70" -> "?70 = --/{}"[color=red];
 "C (fromList [?72]) :<: ?71" -> "?71 = --/{}"[color=red];
 "C (fromList [?75]) :<: ?82" -> "?82 = {E,NE}/{CRASH_d}"[color=red];
 "C (fromList [?75]) :<: ?89" -> "?89 = {}/{CRASH_d}"[color=red];
 "C (fromList [?90]) :<: ?89" -> "?89 = {}/{CRASH_d}"[color=red];
 "C (fromList [?96]) :<: ?95" -> "?95 = {E,NE}/{CRASH_d}"[color=red];
 "C (fromList [CRASH_d]) :<: ?81" -> "?81 = {}/{CRASH_d}"[color=red];
}

