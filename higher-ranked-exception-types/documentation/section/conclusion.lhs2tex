\section{Conclusion}

We show that it is feasible to extend non-strict higher-order languages with exception-annotated types, as is already done in some strict first-order languages. We argue that the use of higher-ranked exception polymorphism and exception operators \emph{\`a la} System~$F_\omega$, not only increase the precision of the analysis, but are also more readable and understandable for the programmer \emph{vis-\`a-vis} constrained type schemes, as the exception terms in the the annotations more closely mirror what is happening at the term level than a constraint set would.
