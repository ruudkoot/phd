\section{TODO}

\begin{itemize}

    \item standard polyrec examples (DHM + GSM)
    
    \item polyrec does not ``come for free''
    
    \item type inference: we have a fixpoint a la DHM
    
    \item widening
    
    \item ``algebraic'' effects?
    
    \item unexpected decidablity
    
    \item ack: Vincent + Femke; Andrew + Jeremy + Stephanie + Andres; ST-RC
    
    \item check wiki and folder for notes
    
    \item exception type of twice (and other h-o funs)
    
    \item no slanted-greek for lambda and Lambda
    
    \item typeset System $F_\omega$ correctly
    
    \item re-enable more fields in bibliography, full first names
    
    \item Stefan's terminology: fully parametric vs. fully flexible
    
    \item roll Metatheory into earlier sections, add new section Analysis (also add to Overview)
    
    \item Untracked exceptions can break information flow security.
    
    \item Elaborte in the subsection ``Contributions''. Mention prototype?

\end{itemize}

\subsection*{Abstract}

    \begin{itemize}

        \item Decidability is only conjectured, so far.
        
        \item title: Higher-order effect types
    
    \end{itemize}

\subsection{Introduction}

    \begin{itemize}
    
        \item Why not |ThrowsArr (Throws alpha e_1) (Throws beta (e_2)) e_3|?! Give some examples why higher-rankedness is needed. The example on the poster/|map| isn't sufficient. Postpone to a later section?

    \end{itemize}
    
\subsection{The $\LambdaUnion$-calculus}

    \begin{itemize}
        \item Prove semantics is ACI1. We have a different unit for each type!
        \item $\mathcal{P}(V_{\tau_1} \to V_{\tau_2}) \simeq V_{\tau_1} \to \mathcal{P}(V_{\tau_2})$? Cardinallity suggests not: $2^{(\beta^\alpha)} \neq (2^\beta)^\alpha$.
        \item If we don't distribute unions over applications, can we ever get them deep inside terms?
        \item If we don't \emph{and} the outermost lambdas are not there because is always of kind star, can we get non-trivial terms? I.e. something other than $e_1(e_{11},...,e_{1n_1}) \cup \cdots \cup e_k(e_{k1},...,e_{kn_k}$ (note: $e$ and not $t$ as arugments).
    \end{itemize}
    
\subsection{Source language}

    \begin{itemize}

        \item We either need to omit the type annotations on $\TmCrash{\Ty}{\ExnLbl}$, or add them to $\TmIf{}{}{}$ and $\TmCase{}{}{}{}{}$.
    
        \item We do not have a rule \CiteRule{E-AnnAppExn}. Check that the canonical forms lemma gives us that terms of universally quantified type cannot be exceptional values.

    \end{itemize}
    
\subsection{Exception types}

    \begin{itemize}
    
        \item \TODOX{Rename stuff in \CiteRule{T-App} in the elaboration system (now subtype/-effect of the result instead of the argument and clashes with the indices enumerated over by $i$!}

        \item $\ExnVar \in \ClassExnVar$

        \item Well-formedness of exception types: embed conservativity / full-flexibility?

        \item Can we roll \textsc{Univ} and \textsc{Arr} into a single construct: $\ExnTyForall{\ExnVar}{\Kind}{\ExnTyArr{\ExnTy_1}{\ExnVar}{\ExnTy_2}{\Exn(\ExnVar)}}$? Still need to deal with the well-formedness of $\ExnTy_1$... Also may need to quantify over more than one variable simultaneously...

    \end{itemize}
    
\subsection{Type inference}

    \begin{itemize}
    
       
        \item Complexity: reduction corresponds to agressive constraint simplification

        \item alternative (faster?) version of Kleene-Mycroft

        \item In R-App and R-Fix: check that the fresh variables generated by |instantiate| are subsituted away by the substitution |subst| created by |match|. Also, we don't need those variables in the algorithm if we don't generate the elaborated term.

        \item In R-Fix we could get rid of the auxillary underlying type function if the fixpoint construct was replaced with a binding variant with an explicit type annotation.
        
        \item For R-Fix, make sure the way we handle fixpoints of exceptional value in a manner that is sound w.r.t. to the operational semantics we are going to give to this.

        \item Note that we do not construct the elaborated term, as it is not useful other than for metatheoretic purposes.
        
        \item Lemma: The algorithm maintains the invariant that exception types and exceptions are in normal form. 

    \end{itemize}
    
\subsection{Related work}

    \begin{itemize}
    
        \item More differences between \cite{HoldermansHage} (e.g. data types)?
        
        \item Christian Mossin. ``Exact flow types'' (intersection types, also non-elementary recursive by Statman)
    
    \end{itemize}
    
\subsection{Future research}

    \begin{itemize}

        \item higher-ranked algebraic effect types, Koka
    
    \end{itemize}
