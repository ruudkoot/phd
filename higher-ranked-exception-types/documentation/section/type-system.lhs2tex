\section{Type system}

\subsection{Terms}

\begin{align}
    \Tm \in \ClassTm &&::=  \quad &\TmVar                   \tag{term variable}     \\
                     &&||   \quad &\TmCon{\Ty}              \tag{term constant}     \\
                     &&||   \quad &\TmAbs{\TmVar}{\Ty}{\Tm} \tag{term abstraction}  \\
                     &&||   \quad &\TmApp{\Tm_1}{\Tm_2}     \tag{term application}  \\
                     &&||   \quad &\TmOp{\Tm_1}{\Tm_2}      \tag{operator}          \\
                     &&||   \quad &\TmIf{\Tm_1}{\Tm_2}{\Tm_3}\tag{conditional}      \\
                     &&||   \quad &\TmCrash{\Ty}{\ExnLbl}   \tag{exception constant}\\
                     &&||   \quad &\TmSeq{\Tm_1}{\Tm_2}     \tag{forcing}           \\
                     &&||   \quad &\TmFix{\Tm}              \tag{anonymous fixpoint}\\
                     &&||   \quad &\TmNil{\Ty}              \tag{nil constructor}   \\
                     &&||   \quad &\TmCons{\Tm_1}{\Tm_2}    \tag{cons constructor}  \\
                     &&||   \quad &\TmCase{\Tm_1}{\Tm_2}{\TmVar_1}{\TmVar_2}{\Tm_3}
                                                            \tag{list eliminator}
\end{align}

\subsection{Underlying type system}

\begin{figure}[h]
    \begin{gather*}
        \Rule{T-Var}
             {}
             {\JudgeTy{\TyEnv, \TmVar : \Ty}
                      {\TmVar}
                      {\Ty}
             }
        \quad
        \Rule{T-Con}
             {}
             {\JudgeTy{\TyEnv}
                      {\TmCon{\Ty}}
                      {\Ty}
             }
        \quad
        \Rule{T-Crash}
             {}
             {\JudgeTy{\TyEnv}
                      {\TmCrash{\Ty}{\ExnLbl}}
                      {\Ty}
             }
        \\[1.5ex]
        \Rule{T-Abs}
             {\JudgeTy{\TyEnv, \TmVar : \Ty_1}
                      {\Tm}
                      {\Ty_2}
             }
             {\JudgeTy{\TyEnv}
                      {\TmAbs{\TmVar}{\Ty_1}{\Tm}}
                      {\TyArr{\Ty_1}{\Ty_2}}
             }
        \quad
        \Rule{T-App}
             {\JudgeTy{\TyEnv}
                      {\Tm_1}
                      {\TyArr{\Ty_2}{\Ty}}
              \quad
              \JudgeTy{\TyEnv}
                      {\Tm_2}
                      {\Ty_2}
             }
             {\JudgeTy{\TyEnv}
                      {\TmApp{\Tm_1}{\Tm_2}}
                      {\Ty}
             }
        \\[1.5ex]
        \Rule{T-Fix}
             {\JudgeTy{\TyEnv}
                      {\Tm}
                      {\TyArr{\Ty}{\Ty}}
             }
             {\JudgeTy{\TyEnv}
                      {\TmFix{\Tm}}
                      {\Ty}
             }
        \\[1.5ex]
        \Rule{T-Op}
             {\JudgeTy{\TyEnv}
                      {\Tm_1}
                      {\TyInt}
              \quad
              \JudgeTy{\TyEnv}
                      {\Tm_2}
                      {\TyInt}
             }
             {\JudgeTy{\TyEnv}
                      {\TmOp{\Tm_1}{\Tm_2}}
                      {\TyBool}
             }
        \quad
        \Rule{T-Seq}
             {\JudgeTy{\TyEnv}
                      {\Tm_1}
                      {\Ty_1}
              \quad
              \JudgeTy{\TyEnv}
                      {\Tm_2}
                      {\Ty_2}
             }
             {\JudgeTy{\TyEnv}
                      {\TmSeq{\Tm_1}{\Tm_2}}
                      {\Ty_2}
             }
        \\[1.5ex]
        \Rule{T-If}
             {\JudgeTy{\TyEnv}
                      {\Tm_1}
                      {\TyBool}
              \quad
              \JudgeTy{\TyEnv}
                      {\Tm_2}
                      {\Ty}
              \quad
              \JudgeTy{\TyEnv}
                      {\Tm_3}
                      {\Ty}
             }
             {\JudgeTy{\TyEnv}
                      {\TmIf{\Tm_1}{\Tm_2}{\Tm_3}}
                      {\Ty}
             }             
        \\[1.5ex]
        \Rule{T-Nil}
             {}
             {\JudgeTy{\TyEnv}
                      {\TmNil{\Ty}}
                      {\TyList{\Ty}}
             }
        \quad
        \Rule{T-Cons}
             {\JudgeTy{\TyEnv}
                      {\Tm_1}
                      {\Ty}
              \quad
              \JudgeTy{\TyEnv}
                      {\Tm_2}
                      {\TyList{\Ty}}
             }
             {\JudgeTy{\TyEnv}
                      {\TmCons{\Tm_1}{\Tm_2}}
                      {\TyList{\Ty}}
             }
        \\[1.5ex]
        \Rule{T-Case}
             {%\begin{gathered}
                  \JudgeTy{\TyEnv}
                          {\Tm_1}
                          {\TyList{\Ty_1}}
                  \quad
                  \JudgeTy{\TyEnv}
                          {\Tm_2}
                          {\Ty}
                  \quad
                  \JudgeTy{\TyEnv, \TmVar_1 : \Ty_1, \TmVar_2 : \TyList{\Ty_1}}
                          {\Tm_3}
                          {\Ty}
              %\end{gathered}
             }
             {\JudgeTy{\TyEnv}
                      {\TmCase{\Tm_1}{\Tm_2}{\TmVar_1}{\TmVar_2}{\Tm_3}}
                      {\Ty}
             }
    \end{gather*}
    \caption{Underlying type system ($\JudgeTy{\TyEnv}{\Tm}{\Ty}$)}    
\end{figure}

\subsection{Declarative exception type system}

\begin{figure}[h]
    \begin{gather*}
        \Rule{T-Var}
             {}
             {\JudgeExnTy{\TyEnv, \TmVar : \ExnTy\ \&\ \Exn}
                         {\KiEnv}
                         {\TmVar}
                         {\ExnTy}
                         {\Exn}
             }
        \\[1.5ex]
        \Rule{T-Con}
             {}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmCon{\Ty}}
                         {\BottomTy{\Ty}}
                         {\ExnEmpty}
             }
        \quad
        \Rule{T-Crash}
             {}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmCrash{\Ty}{\ExnLbl}}
                         {\BottomTy{\Ty}}
                         {\ExnCon{\ExnLbl}}
             }
        \\[1.5ex]
        \Rule{T-Abs}
             {\JudgeExnTy{\TyEnv, \TmVar : \ExnTy_1\ \&\ \Exn_1}
                         {\KiEnv}
                         {\Tm}
                         {\ExnTy_2}
                         {\Exn_2}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmAbsExn{\TmVar}{\ExnTy_1}{\Exn_1}{\Tm}}
                         {\ExnTyArr{\ExnTy_1}{\Exn_1}{\ExnTy_2}{\Exn_2}}
                         {\ExnEmpty}
             }
        \\[1.5ex]
        \Rule{T-AnnAbs}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv, \ExnVar : \Kind}
                         {\Tm}
                         {\ExnTy}
                         {\Exn}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmAnnAbs{\ExnVar}{\Kind}{\Tm}}
                         {\ExnTyForall{\ExnVar}{\Kind}{\ExnTy}}
                         {\Exn}
             }
        \\[1.5ex]
        \Rule{T-App}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_1}
                         {\ExnTyArr{\ExnTy_2}{\Exn_2}{\ExnTy}{\Exn}}
                         {\Exn}
              \quad
              \JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_2}
                         {\ExnTy_2}
                         {\Exn_2}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmApp{\Tm_1}{\Tm_2}}
                         {\ExnTy}
                         {\Exn}
             }
        \\[1.5ex]
        \Rule{T-AnnApp}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_1}
                         {\ExnTyForall{\ExnVar}{\Kind}{\ExnTy}}
                         {\Exn}
              \quad
              \JudgeExn{\KiEnv}
                       {\Exn_2}
                       {\Kind}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmAnnApp{\Tm_1}{\Exn_2}}
                         {\Subst{\Exn_2}{\ExnVar}{\ExnTy}}
                         {\Exn}
             }
        \\[1.5ex]
        \Rule{T-Fix}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm}
                         {\ExnTyArr{\ExnTy}{\Exn}{\ExnTy}{\Exn}}
                         {\Exn}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmFix{\Tm}}
                         {\ExnTy}
                         {\Exn}
             }
        \\[1.5ex]
        \Rule{T-Op}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_1}
                         {\ExnInt}
                         {\Exn}
              \quad
              \JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_2}
                         {\ExnInt}
                         {\Exn}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmOp{\Tm_1}{\Tm_2}}
                         {\ExnBool}
                         {\Exn}
             }
        \\[1.5ex]
        \Rule{T-Seq}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_1}
                         {\ExnTy_1}
                         {\Exn}
              \quad
              \JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_2}
                         {\ExnTy_2}
                         {\Exn}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmSeq{\Tm_1}{\Tm_2}}
                         {\ExnTy_2}
                         {\Exn}
             }
        \\[1.5ex]
        \Rule{T-If}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_1}
                         {\ExnBool}
                         {\Exn}
              \quad
              \JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_2}
                         {\ExnTy}
                         {\Exn}
              \quad
              \JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_3}
                         {\ExnTy}
                         {\Exn}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmIf{\Tm_1}{\Tm_2}{\Tm_3}}
                         {\ExnTy}
                         {\Exn}
             }             
        \\[1.5ex]
        \Rule{T-Nil}
             {}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmNil{\Ty}}
                         {\ExnTyList{\BottomTy{\Ty}}{\ExnEmpty}}
                         {\ExnEmpty}
             }
        \\[1.5ex]
        \Rule{T-Cons}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_1}
                         {\ExnTy}
                         {\Exn_1}
              \quad
              \JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm_2}
                         {\ExnTyList{\ExnTy}{\Exn_1}}
                         {\Exn_2}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmCons{\Tm_1}{\Tm_2}}
                         {\ExnTyList{\ExnTy}{\Exn_1}}
                         {\Exn_2}
             }
        \\[1.5ex]
        \Rule{T-Case}
             {\begin{gathered}
                  \JudgeExnTy{\TyEnv}
                             {\KiEnv}
                             {\Tm_1}
                             {\ExnTyList{\ExnTy_1}{\Exn_1}}
                             {\Exn^\prime}
                  \quad
                  \JudgeSubExn{\KiEnv}{\Exn^\prime}{\Exn}
                  \quad
                  \JudgeExnTy{\TyEnv}
                             {\KiEnv}
                             {\Tm_2}
                             {\ExnTy}
                             {\Exn}
                  \\
                  \JudgeExnTy{\TyEnv, \TmVar_1 : \ExnTy_1\ \&\ \Exn_1, \TmVar_2 : \ExnTyList{\ExnTy_1}{\Exn_1}\ \&\ \Exn^\prime}
                             {\KiEnv}
                             {\Tm_3}
                             {\ExnTy}
                             {\Exn}
              \end{gathered}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\TmCase{\Tm_1}{\Tm_2}{\TmVar_1}{\TmVar_2}{\Tm_3}}
                         {\ExnTy}
                         {\Exn}
             }
        \\[1.5ex]
        \Rule{T-Sub}
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm}
                         {\ExnTy}
                         {\Exn}
              \quad
              \JudgeSubTy{\TyEnv}
                         {\KiEnv}
                         {\ExnTy}
                         {\ExnTy^\prime}
              \quad
              \JudgeSubExn{\KiEnv}
                          {\Exn}
                          {\Exn^\prime}
             }
             {\JudgeExnTy{\TyEnv}
                         {\KiEnv}
                         {\Tm}
                         {\ExnTy^\prime}
                         {\Exn^\prime}
             }
    \end{gather*}
    \caption{Declarative type system ($\JudgeExnTy{\TyEnv}{\KiEnv}{\Tm}{\ExnTy}{\Exn}$)}    
\end{figure}

\begin{itemize}

    \item In T-Abs and T-AnnAbs, should the term-level term-abstraction also have an explicit effect annotation?

    \item In T-AnnAbs, might need a side condition stating that $\ExnVar$ is not free in $\KiEnv$.

    \item In T-App, note the double occurence of $\Exn$ when typing $\Tm_1$. Is subeffecting sufficient here? Also note that we do \emph{not} expect an exception variable in the left-hand side annotation of the function space constructor.
    
    \item In T-AnnApp, note the substitution. We will need a substitution lemma for annotations.
    
    \item In T-Fix, the might be some universal quantifiers in our way. Do annotation applications in $\Tm$ take care of this, already? Perhaps we do need to change $\TmFix{\Tm}$ into a binding construct to resolve this? Also, there is some implicit subeffecting going on between the annotations and effect.
    
    \item In T-Case, note the use of explicit subeffecting. Can this be done using implicit subeffecting?
    
    \item For T-Sub, should we introduce a term-level coercion, as in Dussart--Henglein--Mossin? We now do atomic subtyping, is subeffecting sufficient?
    
\end{itemize}

\subsection{Type elaboration system}

\begin{figure}[h]
    \begin{gather*}
        \Rule{T-Var}
             {}
             {\JudgeElab{\TyEnv, \TmVar : \ExnTy\ \&\ \Exn}
                        {\TmVar}
                        {\TmVar}
                        {\ExnTy}
                        {\Exn}
             }
        \\[1.5em]
        \Rule{T-Con}
             {}
             {\JudgeElab{\TyEnv}
                        {\TmCon{\Ty}}
                        {\TmCon{\Ty}}
                        {\Ty}
                        {\ExnEmpty}
             }
        \quad
        \Rule{T-Crash}
             {}
             {\JudgeElab{\TyEnv}
                        {\TmCrash{\Ty}{\ExnLbl}}
                        {\TmCrash{\Ty}{\ExnLbl}}
                        {\BottomTy{\Ty}}
                        {\ExnCon{\ExnLbl}}
             }
        \\[1.5ex]
        \Rule{T-Abs (TODO)}
             {\JudgeTy{\TyEnv, \TmVar : \Ty_1}
                      {\Tm}
                      {\Ty_2}
             }
             {\JudgeTy{\TyEnv}
                      {\TmAbs{\TmVar}{\Ty_1}{\Tm}}
                      {\TyArr{\Ty_1}{\Ty_2}}
             }
        \\[1.5ex]
        \Rule{T-App (TODO)}
             {\JudgeTy{\TyEnv}
                      {\Tm_1}
                      {\TyArr{\Ty_2}{\Ty}}
              \quad
              \JudgeTy{\TyEnv}
                      {\Tm_2}
                      {\Ty_2}
             }
             {\JudgeTy{\TyEnv}
                      {\TmApp{\Tm_1}{\Tm_2}}
                      {\Ty}
             }
        \\[1.5ex]
        \Rule{T-Fix (TODO)}
             {\JudgeTy{\TyEnv}
                      {\Tm}
                      {\TyArr{\Ty}{\Ty}}
             }
             {\JudgeTy{\TyEnv}
                      {\TmFix{\Tm}}
                      {\Ty}
             }
        \\[1.5ex]
        \Rule{T-Op}
             {\JudgeElab{\TyEnv}
                        {\Tm_1}
                        {\Tm_1^\prime}
                        {\ExnInt}
                        {\Exn_1}
              \quad
              \JudgeElab{\TyEnv}
                        {\Tm_2}
                        {\Tm_2^\prime}
                        {\ExnInt}
                        {\Exn_2}
             }
             {\JudgeElab{\TyEnv}
                        {\TmOp{\Tm_1}{\Tm_2}}
                        {\TmOp{\Tm_1^\prime}{\Tm_2^\prime}}
                        {\ExnBool}
                        {\ExnUnion{\Exn_1}{\Exn_2}}
             }
        \\[1.5ex]
        \Rule{T-Seq}
             {\JudgeElab{\TyEnv}
                        {\Tm_1}
                        {\Tm_1^\prime}
                        {\ExnTy_1}
                        {\Exn_1}
              \quad
              \JudgeElab{\TyEnv}
                        {\Tm_2}
                        {\Tm_2^\prime}
                        {\ExnTy_2}
                        {\Exn_2}
             }
             {\JudgeElab{\TyEnv}
                        {\TmSeq{\Tm_1}{\Tm_2}}
                        {\TmSeq{\Tm_1^\prime}{\Tm_2^\prime}}
                        {\ExnTy_2}
                        {\ExnUnion{\Exn_1}{\Exn_2}}
             }
        \\[1.5ex]
        \Rule{T-If}
             {\JudgeElab{\TyEnv}
                        {\Tm_1}
                        {\Tm_1^\prime}
                        {\ExnBool}
                        {\Exn_1}
              \quad
              \JudgeElab{\TyEnv}
                        {\Tm_2}
                        {\Tm_2^\prime}
                        {\ExnTy_2}
                        {\Exn_2}
              \quad
              \JudgeElab{\TyEnv}
                        {\Tm_3}
                        {\Tm_3^\prime}
                        {\ExnTy_3}
                        {\Exn_3}
             }
             {\JudgeElab{\TyEnv}
                        {\TmIf{\Tm_1}{\Tm_2}{\Tm_3}}
                        {\TmIf{\Tm_1^\prime}{\Tm_2^\prime}{\Tm_3^\prime}}
                        {\TyJoin{\ExnTy_2}{\ExnTy_3}}
                        {\ExnUnion{\Exn_1}{\ExnUnion{\Exn_2}{\Exn_3}}}
             }             
        \\[1.5ex]
        \Rule{T-Nil}
             {}
             {\JudgeElab{\TyEnv}
                        {\TmNil{\Ty}}
                        {\TmNil{\Ty}}
                        {\BottomTy{\Ty}}
                        {\ExnEmpty}
             }
        \\[1.5ex]
        \Rule{T-Cons}
             {\JudgeElab{\TyEnv}
                        {\Tm_1}
                        {\Tm_1^\prime}
                        {\ExnTy_1}
                        {\Exn_1}
              \quad
              \JudgeElab{\TyEnv}
                        {\Tm_2}
                        {\Tm_2^\prime}
                        {\ExnTyList{\ExnTy_1^\prime}{\Exn_1^\prime}}
                        {\Exn_2}
             }
             {\JudgeElab{\TyEnv}
                        {\TmCons{\Tm_1}{\Tm_2}}
                        {\TmCons{\Tm_1^\prime}{\Tm_2^\prime}}
                        {\ExnTyList{\TyJoin{\ExnTy_1}{\ExnTy_1^\prime}}{\ExnUnion{\Exn_1}{\Exn_1^\prime}}}
                        {\Exn_2}
             }
        \\[1.5ex]
        \Rule{T-Case}
             {\begin{gathered}
                  \JudgeElab{\TyEnv}
                            {\Tm_1}
                            {\Tm_1^\prime}
                            {\ExnTyList{\Ty_1}{\Exn_1}}
                            {\Exn_1^\prime}
                  \quad
                  \JudgeElab{\TyEnv}
                            {\Tm_2}
                            {\Tm_2^\prime}
                            {\ExnTy_2}
                            {\Exn_2}
                  \\
                  \JudgeElab{\TyEnv, \TmVar_1 : \ExnTy_1\ \&\ \Exn_1, \TmVar_2 : \ExnTyList{\Ty_1}{\Exn_1}\ \&\ \Exn_1^\prime}
                            {\Tm_3}
                            {\Tm_3^\prime}
                            {\ExnTy_3}
                            {\Exn_3}
              \end{gathered}
             }
             {\begin{multlined}
                  \JudgeElabM{\TyEnv}
                             {\TmCase{\Tm_1}{\Tm_2}{\TmVar_1}{\TmVar_2}{\Tm_3}}
                             {\TmCase{\Tm_1^\prime}{\Tm_2^\prime}{\TmVar_1}{\TmVar_2}{\Tm_3^\prime}}
                             {\TyJoin{\ExnTy_2}{\ExnTy_3}}
                             {\ExnUnion{\Exn_1^\prime}{\ExnUnion{\Exn_2}{\Exn_3}}}
              \end{multlined}
             }
    \end{gather*}
    \caption{Syntax-directed type elaboration system ($\JudgeElab{\TyEnv}{\Tm}{\Tm^\prime}{\ExnTy}{\Exn}$)}    
\end{figure}

\subsection{Type inference algorithm}
